{"ast":null,"code":"import { Action } from \"../../internal/Action.js\";\nimport { QualifierValue } from \"../../internal/qualifier/QualifierValue.js\";\nimport { Qualifier } from \"../../internal/qualifier/Qualifier.js\";\n/**\n * @description Adds a shadow to the object in an image.\n * @extends SDK.Action\n * @memberOf Actions.Effect\n * @see Visit {@link Actions.Effect|Effect} for an example\n */\n\nclass DropShadow extends Action {\n  constructor() {\n    super();\n    this._actionModel = {};\n    this._actionModel.actionType = 'dropshadow';\n  }\n  /**\n   * @description\n   * The direction the light is coming from to cause the shadow effect. (Range: 0 to 360, Server default: 215)\n   * @param {number} azimuth\n   * @return {this}\n   */\n\n\n  azimuth(azimuth) {\n    this._actionModel.azimuth = azimuth;\n    this._azimuth = azimuth;\n    return this;\n  }\n  /**\n   * @description\n   * The height of the light source above the 'ground' to cause the shadow effect. (Range: 0 to 90, Server default: 45)\n   * @param {number} elevation\n   * @return {this}\n   */\n\n\n  elevation(elevation) {\n    this._actionModel.elevation = elevation;\n    this._elevation = elevation;\n    return this;\n  }\n  /**\n   * @description\n   * The spread of the light source. A small number means 'point' light. A larger number means 'area' light. (Range: 0 to 100, Server default: 50)\n   * @param {number} spread\n   * @return {this}\n   */\n\n\n  spread(spread) {\n    this._actionModel.spread = spread;\n    this._spread = spread;\n    return this;\n  }\n\n  prepareQualifiers() {\n    const paramNames = ['azimuth', 'elevation', 'spread'];\n    const paramValues = [this._azimuth, this._elevation, this._spread];\n    const paramString = paramValues.map((value, index) => value !== undefined ? `${paramNames[index]}_${value}` : '').filter(Boolean).join(';');\n    this.addQualifier(new Qualifier('e', new QualifierValue(['dropshadow', paramString]).setDelimiter(':')));\n  }\n\n  static fromJson(actionModel) {\n    const {\n      azimuth,\n      elevation,\n      spread\n    } = actionModel; // We are using this() to allow inheriting classes to use super.fromJson.apply(this, [actionModel])\n    // This allows the inheriting classes to determine the class to be created\n\n    const result = new this();\n    azimuth && result.azimuth(azimuth);\n    elevation && result.elevation(elevation);\n    spread && result.spread(spread);\n    return result;\n  }\n\n}\n\nexport { DropShadow };","map":{"version":3,"names":["Action","QualifierValue","Qualifier","DropShadow","constructor","_actionModel","actionType","azimuth","_azimuth","elevation","_elevation","spread","_spread","prepareQualifiers","paramNames","paramValues","paramString","map","value","index","undefined","filter","Boolean","join","addQualifier","setDelimiter","fromJson","actionModel","result"],"sources":["C:/Users/DELL/OneDrive/Desktop/New folder (2)/New folder/node_modules/@cloudinary/transformation-builder-sdk/actions/effect/DropShadow.js"],"sourcesContent":["import { Action } from \"../../internal/Action.js\";\nimport { QualifierValue } from \"../../internal/qualifier/QualifierValue.js\";\nimport { Qualifier } from \"../../internal/qualifier/Qualifier.js\";\n/**\n * @description Adds a shadow to the object in an image.\n * @extends SDK.Action\n * @memberOf Actions.Effect\n * @see Visit {@link Actions.Effect|Effect} for an example\n */\nclass DropShadow extends Action {\n    constructor() {\n        super();\n        this._actionModel = {};\n        this._actionModel.actionType = 'dropshadow';\n    }\n    /**\n     * @description\n     * The direction the light is coming from to cause the shadow effect. (Range: 0 to 360, Server default: 215)\n     * @param {number} azimuth\n     * @return {this}\n     */\n    azimuth(azimuth) {\n        this._actionModel.azimuth = azimuth;\n        this._azimuth = azimuth;\n        return this;\n    }\n    /**\n     * @description\n     * The height of the light source above the 'ground' to cause the shadow effect. (Range: 0 to 90, Server default: 45)\n     * @param {number} elevation\n     * @return {this}\n     */\n    elevation(elevation) {\n        this._actionModel.elevation = elevation;\n        this._elevation = elevation;\n        return this;\n    }\n    /**\n     * @description\n     * The spread of the light source. A small number means 'point' light. A larger number means 'area' light. (Range: 0 to 100, Server default: 50)\n     * @param {number} spread\n     * @return {this}\n     */\n    spread(spread) {\n        this._actionModel.spread = spread;\n        this._spread = spread;\n        return this;\n    }\n    prepareQualifiers() {\n        const paramNames = ['azimuth', 'elevation', 'spread'];\n        const paramValues = [this._azimuth, this._elevation, this._spread];\n        const paramString = paramValues.map((value, index) => value !== undefined ? `${paramNames[index]}_${value}` : '').filter(Boolean).join(';');\n        this.addQualifier(new Qualifier('e', new QualifierValue(['dropshadow', paramString]).setDelimiter(':')));\n    }\n    static fromJson(actionModel) {\n        const { azimuth, elevation, spread } = actionModel;\n        // We are using this() to allow inheriting classes to use super.fromJson.apply(this, [actionModel])\n        // This allows the inheriting classes to determine the class to be created\n        const result = new this();\n        azimuth && result.azimuth(azimuth);\n        elevation && result.elevation(elevation);\n        spread && result.spread(spread);\n        return result;\n    }\n}\nexport { DropShadow };\n"],"mappings":"AAAA,SAASA,MAAT,QAAuB,0BAAvB;AACA,SAASC,cAAT,QAA+B,4CAA/B;AACA,SAASC,SAAT,QAA0B,uCAA1B;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,MAAMC,UAAN,SAAyBH,MAAzB,CAAgC;EAC5BI,WAAW,GAAG;IACV;IACA,KAAKC,YAAL,GAAoB,EAApB;IACA,KAAKA,YAAL,CAAkBC,UAAlB,GAA+B,YAA/B;EACH;EACD;AACJ;AACA;AACA;AACA;AACA;;;EACIC,OAAO,CAACA,OAAD,EAAU;IACb,KAAKF,YAAL,CAAkBE,OAAlB,GAA4BA,OAA5B;IACA,KAAKC,QAAL,GAAgBD,OAAhB;IACA,OAAO,IAAP;EACH;EACD;AACJ;AACA;AACA;AACA;AACA;;;EACIE,SAAS,CAACA,SAAD,EAAY;IACjB,KAAKJ,YAAL,CAAkBI,SAAlB,GAA8BA,SAA9B;IACA,KAAKC,UAAL,GAAkBD,SAAlB;IACA,OAAO,IAAP;EACH;EACD;AACJ;AACA;AACA;AACA;AACA;;;EACIE,MAAM,CAACA,MAAD,EAAS;IACX,KAAKN,YAAL,CAAkBM,MAAlB,GAA2BA,MAA3B;IACA,KAAKC,OAAL,GAAeD,MAAf;IACA,OAAO,IAAP;EACH;;EACDE,iBAAiB,GAAG;IAChB,MAAMC,UAAU,GAAG,CAAC,SAAD,EAAY,WAAZ,EAAyB,QAAzB,CAAnB;IACA,MAAMC,WAAW,GAAG,CAAC,KAAKP,QAAN,EAAgB,KAAKE,UAArB,EAAiC,KAAKE,OAAtC,CAApB;IACA,MAAMI,WAAW,GAAGD,WAAW,CAACE,GAAZ,CAAgB,CAACC,KAAD,EAAQC,KAAR,KAAkBD,KAAK,KAAKE,SAAV,GAAuB,GAAEN,UAAU,CAACK,KAAD,CAAQ,IAAGD,KAAM,EAApD,GAAwD,EAA1F,EAA8FG,MAA9F,CAAqGC,OAArG,EAA8GC,IAA9G,CAAmH,GAAnH,CAApB;IACA,KAAKC,YAAL,CAAkB,IAAItB,SAAJ,CAAc,GAAd,EAAmB,IAAID,cAAJ,CAAmB,CAAC,YAAD,EAAee,WAAf,CAAnB,EAAgDS,YAAhD,CAA6D,GAA7D,CAAnB,CAAlB;EACH;;EACc,OAARC,QAAQ,CAACC,WAAD,EAAc;IACzB,MAAM;MAAEpB,OAAF;MAAWE,SAAX;MAAsBE;IAAtB,IAAiCgB,WAAvC,CADyB,CAEzB;IACA;;IACA,MAAMC,MAAM,GAAG,IAAI,IAAJ,EAAf;IACArB,OAAO,IAAIqB,MAAM,CAACrB,OAAP,CAAeA,OAAf,CAAX;IACAE,SAAS,IAAImB,MAAM,CAACnB,SAAP,CAAiBA,SAAjB,CAAb;IACAE,MAAM,IAAIiB,MAAM,CAACjB,MAAP,CAAcA,MAAd,CAAV;IACA,OAAOiB,MAAP;EACH;;AAtD2B;;AAwDhC,SAASzB,UAAT"},"metadata":{},"sourceType":"module"}