{"ast":null,"code":"import { GravityQualifier } from \"../GravityQualifier.js\";\n/**\n * @description The class for the FocusOn builder\n * @memberOf Qualifiers.Gravity\n * @extends {Qualifiers.Gravity.GravityQualifier}\n */\n\nclass FocusOnGravity extends GravityQualifier {\n  constructor(FocusOnObjects) {\n    // Required due to https://github.com/microsoft/TypeScript/issues/13029\n\n    /* istanbul ignore next */\n    super(FocusOnObjects);\n  }\n  /**\n   * @description Specifies the gravity to use if none of the other gravity objects are found.\n   * @param {Qualifiers.Gravity.AutoGravity} val\n   */\n\n\n  fallbackGravity(val) {\n    /*\n     *  FocusOnGravity(this) is already a qualifier, with a key and a value g_{obj1}\n     *  fallBackGravity also attempts to add a value, to reach the result of g_{obj1}:auto:{obj2}\n     *  Since AutoGravity is a Qualifier, it also comes with its own g_ key, which needs to be removed.\n     *  To solve it, we take only the value from the qualifier, instead of the whole thing\n     */\n    this.addValue(val.qualifierValue);\n    return this;\n  }\n\n}\n\nexport { FocusOnGravity };","map":{"version":3,"names":["GravityQualifier","FocusOnGravity","constructor","FocusOnObjects","fallbackGravity","val","addValue","qualifierValue"],"sources":["C:/Users/DELL/OneDrive/Desktop/New folder (2)/New folder/node_modules/@cloudinary/transformation-builder-sdk/qualifiers/gravity/focusOnGravity/FocusOnGravity.js"],"sourcesContent":["import { GravityQualifier } from \"../GravityQualifier.js\";\n/**\n * @description The class for the FocusOn builder\n * @memberOf Qualifiers.Gravity\n * @extends {Qualifiers.Gravity.GravityQualifier}\n */\nclass FocusOnGravity extends GravityQualifier {\n    constructor(FocusOnObjects) {\n        // Required due to https://github.com/microsoft/TypeScript/issues/13029\n        /* istanbul ignore next */\n        super(FocusOnObjects);\n    }\n    /**\n     * @description Specifies the gravity to use if none of the other gravity objects are found.\n     * @param {Qualifiers.Gravity.AutoGravity} val\n     */\n    fallbackGravity(val) {\n        /*\n         *  FocusOnGravity(this) is already a qualifier, with a key and a value g_{obj1}\n         *  fallBackGravity also attempts to add a value, to reach the result of g_{obj1}:auto:{obj2}\n         *  Since AutoGravity is a Qualifier, it also comes with its own g_ key, which needs to be removed.\n         *  To solve it, we take only the value from the qualifier, instead of the whole thing\n         */\n        this.addValue(val.qualifierValue);\n        return this;\n    }\n}\nexport { FocusOnGravity };\n"],"mappings":"AAAA,SAASA,gBAAT,QAAiC,wBAAjC;AACA;AACA;AACA;AACA;AACA;;AACA,MAAMC,cAAN,SAA6BD,gBAA7B,CAA8C;EAC1CE,WAAW,CAACC,cAAD,EAAiB;IACxB;;IACA;IACA,MAAMA,cAAN;EACH;EACD;AACJ;AACA;AACA;;;EACIC,eAAe,CAACC,GAAD,EAAM;IACjB;AACR;AACA;AACA;AACA;AACA;IACQ,KAAKC,QAAL,CAAcD,GAAG,CAACE,cAAlB;IACA,OAAO,IAAP;EACH;;AAnByC;;AAqB9C,SAASN,cAAT"},"metadata":{},"sourceType":"module"}