{"ast":null,"code":"import { stringPad } from \"./stringPad.js\";\n/**\n * @private\n * @description Pads each segment with '0' so they have length of 2\n * @param {string} semVer Input can be either x.y.z or x.y\n * @return {string} in the form of xx.yy.zz (\n */\n\nexport function padVersion(semVer) {\n  if (semVer.split('.').length < 2) {\n    throw new Error('invalid semVer, must have at least two segments');\n  } // Split by '.', reverse, create new array with padded values and concat it together\n\n\n  return semVer.split('.').map(segment => {\n    // try to cast to number\n    const asNumber = +segment;\n\n    if (isNaN(asNumber) || asNumber < 0) {\n      throw 'Invalid version number provided';\n    }\n\n    return stringPad(segment, 2, '0');\n  }).join('.');\n}","map":{"version":3,"names":["stringPad","padVersion","semVer","split","length","Error","map","segment","asNumber","isNaN","join"],"sources":["C:/Users/DELL/OneDrive/Desktop/New folder (2)/New folder/node_modules/@cloudinary/url-gen/sdkAnalytics/padVersion.js"],"sourcesContent":["import { stringPad } from \"./stringPad.js\";\n/**\n * @private\n * @description Pads each segment with '0' so they have length of 2\n * @param {string} semVer Input can be either x.y.z or x.y\n * @return {string} in the form of xx.yy.zz (\n */\nexport function padVersion(semVer) {\n    if (semVer.split('.').length < 2) {\n        throw new Error('invalid semVer, must have at least two segments');\n    }\n    // Split by '.', reverse, create new array with padded values and concat it together\n    return semVer.split('.').map((segment) => {\n        // try to cast to number\n        const asNumber = +segment;\n        if (isNaN(asNumber) || asNumber < 0) {\n            throw 'Invalid version number provided';\n        }\n        return stringPad(segment, 2, '0');\n    }).join('.');\n}\n"],"mappings":"AAAA,SAASA,SAAT,QAA0B,gBAA1B;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASC,UAAT,CAAoBC,MAApB,EAA4B;EAC/B,IAAIA,MAAM,CAACC,KAAP,CAAa,GAAb,EAAkBC,MAAlB,GAA2B,CAA/B,EAAkC;IAC9B,MAAM,IAAIC,KAAJ,CAAU,iDAAV,CAAN;EACH,CAH8B,CAI/B;;;EACA,OAAOH,MAAM,CAACC,KAAP,CAAa,GAAb,EAAkBG,GAAlB,CAAuBC,OAAD,IAAa;IACtC;IACA,MAAMC,QAAQ,GAAG,CAACD,OAAlB;;IACA,IAAIE,KAAK,CAACD,QAAD,CAAL,IAAmBA,QAAQ,GAAG,CAAlC,EAAqC;MACjC,MAAM,iCAAN;IACH;;IACD,OAAOR,SAAS,CAACO,OAAD,EAAU,CAAV,EAAa,GAAb,CAAhB;EACH,CAPM,EAOJG,IAPI,CAOC,GAPD,CAAP;AAQH"},"metadata":{},"sourceType":"module"}