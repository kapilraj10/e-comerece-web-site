{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport AddAdmin from './components/AddAdmin'; // Adjust the path as needed\n\nconst adminAuthSlice = createSlice({\n  name: 'adminAuth',\n  initialState: {\n    isLogedIn: false,\n    adminData: {},\n    admins: [] // To store multiple admins\n\n  },\n  reducers: {\n    // Login logic for any admin\n    login: (state, action) => {\n      const userInfo = action.payload;\n      state.isLogedIn = true;\n      state.adminData = userInfo; // Save multiple admins in the state\n\n      const existingAdmin = state.admins.find(admin => admin.email === userInfo.email);\n\n      if (!existingAdmin) {\n        state.admins.push(userInfo);\n      } // Save login data to localStorage\n\n\n      const {\n        email,\n        password\n      } = userInfo;\n      const loginData = {\n        email,\n        password\n      };\n      localStorage.setItem('adminAuthData', JSON.stringify(loginData));\n    },\n    // Set the state when user is not logged in\n    notLogin: state => {\n      state.isLogedIn = false;\n      state.adminData = {};\n    },\n    // Logout action and clear localStorage\n    logout: state => {\n      localStorage.removeItem('adminAuthData');\n      state.isLogedIn = false;\n      state.adminData = {};\n    },\n    // Update an existing admin\n    updateAdmin: (state, action) => {\n      const {\n        email,\n        password\n      } = action.payload; // Update localStorage with the new admin data\n\n      localStorage.setItem('adminAuthData', JSON.stringify({\n        email,\n        password\n      })); // Update the state with the new admin data\n\n      const adminIndex = state.admins.findIndex(admin => admin.email === email);\n\n      if (adminIndex !== -1) {\n        state.admins[adminIndex] = action.payload;\n      }\n\n      state.adminData = action.payload;\n    },\n    // Action to add a new admin (if needed)\n    addAdmin: (state, action) => {\n      const newAdmin = action.payload;\n      state.admins.push(newAdmin);\n    }\n  }\n});\nexport const {\n  login,\n  notLogin,\n  logout,\n  updateAdmin,\n  addAdmin\n} = adminAuthSlice.actions;\nexport default adminAuthSlice.reducer;","map":{"version":3,"names":["createSlice","AddAdmin","adminAuthSlice","name","initialState","isLogedIn","adminData","admins","reducers","login","state","action","userInfo","payload","existingAdmin","find","admin","email","push","password","loginData","localStorage","setItem","JSON","stringify","notLogin","logout","removeItem","updateAdmin","adminIndex","findIndex","addAdmin","newAdmin","actions","reducer"],"sources":["C:/Users/DELL/OneDrive/Desktop/New folder/New folder/src/App/features/adminAuthSlice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\nimport AddAdmin from './components/AddAdmin'; // Adjust the path as needed\n\nconst adminAuthSlice = createSlice({\n    name: 'adminAuth',\n    initialState: {\n        isLogedIn: false,\n        adminData: {},\n        admins: []  // To store multiple admins\n    },\n    reducers: {\n        // Login logic for any admin\n        login: (state, action) => {\n            const userInfo = action.payload;\n            state.isLogedIn = true;\n            state.adminData = userInfo;\n\n            // Save multiple admins in the state\n            const existingAdmin = state.admins.find(admin => admin.email === userInfo.email);\n            if (!existingAdmin) {\n                state.admins.push(userInfo);\n            }\n\n            // Save login data to localStorage\n            const { email, password } = userInfo;\n            const loginData = { email, password };\n            localStorage.setItem('adminAuthData', JSON.stringify(loginData));\n        },\n\n        // Set the state when user is not logged in\n        notLogin: (state) => {\n            state.isLogedIn = false;\n            state.adminData = {};\n        },\n\n        // Logout action and clear localStorage\n        logout: (state) => {\n            localStorage.removeItem('adminAuthData');\n            state.isLogedIn = false;\n            state.adminData = {};\n        },\n\n        // Update an existing admin\n        updateAdmin: (state, action) => {\n            const { email, password } = action.payload;\n\n            // Update localStorage with the new admin data\n            localStorage.setItem('adminAuthData', JSON.stringify({ email, password }));\n\n            // Update the state with the new admin data\n            const adminIndex = state.admins.findIndex(admin => admin.email === email);\n            if (adminIndex !== -1) {\n                state.admins[adminIndex] = action.payload;\n            }\n\n            state.adminData = action.payload;\n        },\n\n        // Action to add a new admin (if needed)\n        addAdmin: (state, action) => {\n            const newAdmin = action.payload;\n            state.admins.push(newAdmin);\n        }\n    }\n});\n\nexport const { login, notLogin, logout, updateAdmin, addAdmin } = adminAuthSlice.actions;\n\nexport default adminAuthSlice.reducer;\n"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AACA,OAAOC,QAAP,MAAqB,uBAArB,C,CAA8C;;AAE9C,MAAMC,cAAc,GAAGF,WAAW,CAAC;EAC/BG,IAAI,EAAE,WADyB;EAE/BC,YAAY,EAAE;IACVC,SAAS,EAAE,KADD;IAEVC,SAAS,EAAE,EAFD;IAGVC,MAAM,EAAE,EAHE,CAGE;;EAHF,CAFiB;EAO/BC,QAAQ,EAAE;IACN;IACAC,KAAK,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAmB;MACtB,MAAMC,QAAQ,GAAGD,MAAM,CAACE,OAAxB;MACAH,KAAK,CAACL,SAAN,GAAkB,IAAlB;MACAK,KAAK,CAACJ,SAAN,GAAkBM,QAAlB,CAHsB,CAKtB;;MACA,MAAME,aAAa,GAAGJ,KAAK,CAACH,MAAN,CAAaQ,IAAb,CAAkBC,KAAK,IAAIA,KAAK,CAACC,KAAN,KAAgBL,QAAQ,CAACK,KAApD,CAAtB;;MACA,IAAI,CAACH,aAAL,EAAoB;QAChBJ,KAAK,CAACH,MAAN,CAAaW,IAAb,CAAkBN,QAAlB;MACH,CATqB,CAWtB;;;MACA,MAAM;QAAEK,KAAF;QAASE;MAAT,IAAsBP,QAA5B;MACA,MAAMQ,SAAS,GAAG;QAAEH,KAAF;QAASE;MAAT,CAAlB;MACAE,YAAY,CAACC,OAAb,CAAqB,eAArB,EAAsCC,IAAI,CAACC,SAAL,CAAeJ,SAAf,CAAtC;IACH,CAjBK;IAmBN;IACAK,QAAQ,EAAGf,KAAD,IAAW;MACjBA,KAAK,CAACL,SAAN,GAAkB,KAAlB;MACAK,KAAK,CAACJ,SAAN,GAAkB,EAAlB;IACH,CAvBK;IAyBN;IACAoB,MAAM,EAAGhB,KAAD,IAAW;MACfW,YAAY,CAACM,UAAb,CAAwB,eAAxB;MACAjB,KAAK,CAACL,SAAN,GAAkB,KAAlB;MACAK,KAAK,CAACJ,SAAN,GAAkB,EAAlB;IACH,CA9BK;IAgCN;IACAsB,WAAW,EAAE,CAAClB,KAAD,EAAQC,MAAR,KAAmB;MAC5B,MAAM;QAAEM,KAAF;QAASE;MAAT,IAAsBR,MAAM,CAACE,OAAnC,CAD4B,CAG5B;;MACAQ,YAAY,CAACC,OAAb,CAAqB,eAArB,EAAsCC,IAAI,CAACC,SAAL,CAAe;QAAEP,KAAF;QAASE;MAAT,CAAf,CAAtC,EAJ4B,CAM5B;;MACA,MAAMU,UAAU,GAAGnB,KAAK,CAACH,MAAN,CAAauB,SAAb,CAAuBd,KAAK,IAAIA,KAAK,CAACC,KAAN,KAAgBA,KAAhD,CAAnB;;MACA,IAAIY,UAAU,KAAK,CAAC,CAApB,EAAuB;QACnBnB,KAAK,CAACH,MAAN,CAAasB,UAAb,IAA2BlB,MAAM,CAACE,OAAlC;MACH;;MAEDH,KAAK,CAACJ,SAAN,GAAkBK,MAAM,CAACE,OAAzB;IACH,CA9CK;IAgDN;IACAkB,QAAQ,EAAE,CAACrB,KAAD,EAAQC,MAAR,KAAmB;MACzB,MAAMqB,QAAQ,GAAGrB,MAAM,CAACE,OAAxB;MACAH,KAAK,CAACH,MAAN,CAAaW,IAAb,CAAkBc,QAAlB;IACH;EApDK;AAPqB,CAAD,CAAlC;AA+DA,OAAO,MAAM;EAAEvB,KAAF;EAASgB,QAAT;EAAmBC,MAAnB;EAA2BE,WAA3B;EAAwCG;AAAxC,IAAqD7B,cAAc,CAAC+B,OAA1E;AAEP,eAAe/B,cAAc,CAACgC,OAA9B"},"metadata":{},"sourceType":"module"}