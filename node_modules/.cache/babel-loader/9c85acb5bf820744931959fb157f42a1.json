{"ast":null,"code":"import { Action } from \"../../../internal/Action.js\";\nimport { QualifierValue } from \"../../../internal/qualifier/QualifierValue.js\";\nimport { Qualifier } from \"../../../internal/qualifier/Qualifier.js\";\nimport { ACTION_TYPE_TO_EFFECT_MODE_MAP, EFFECT_MODE_TO_ACTION_TYPE_MAP } from \"../../../internal/internalConstants.js\";\n/**\n * @description A class that defines a simple effect of the type e_{effectName}\n * @extends SDK.Action\n * @memberOf Actions.Effect\n * @see Visit {@link Actions.Effect|Effect} for an example\n */\n\nclass SimpleEffectAction extends Action {\n  constructor(effectType, level) {\n    super();\n    this._actionModel = {};\n    this._actionModel.actionType = EFFECT_MODE_TO_ACTION_TYPE_MAP[effectType] || effectType;\n    const qualifierEffect = this.createEffectQualifier(effectType, level);\n    this.addQualifier(qualifierEffect);\n  }\n\n  createEffectQualifier(effectType, level) {\n    let qualifierValue;\n\n    if (level) {\n      qualifierValue = new QualifierValue([effectType, `${level}`]).setDelimiter(':');\n    } else {\n      qualifierValue = new QualifierValue(effectType);\n    }\n\n    return new Qualifier('e', qualifierValue);\n  }\n\n  static fromJson(actionModel) {\n    const {\n      actionType,\n      level,\n      strength\n    } = actionModel;\n    const effectType = ACTION_TYPE_TO_EFFECT_MODE_MAP[actionType] || actionType; // We are using this() to allow inheriting classes to use super.fromJson.apply(this, [actionModel])\n    // This allows the inheriting classes to determine the class to be created\n    // @ts-ignore\n\n    const result = new this(effectType, level ? level : strength);\n    return result;\n  }\n\n}\n\nexport { SimpleEffectAction };","map":{"version":3,"names":["Action","QualifierValue","Qualifier","ACTION_TYPE_TO_EFFECT_MODE_MAP","EFFECT_MODE_TO_ACTION_TYPE_MAP","SimpleEffectAction","constructor","effectType","level","_actionModel","actionType","qualifierEffect","createEffectQualifier","addQualifier","qualifierValue","setDelimiter","fromJson","actionModel","strength","result"],"sources":["C:/Users/DELL/OneDrive/Desktop/New folder (2)/New folder/node_modules/@cloudinary/transformation-builder-sdk/actions/effect/EffectActions/SimpleEffectAction.js"],"sourcesContent":["import { Action } from \"../../../internal/Action.js\";\nimport { QualifierValue } from \"../../../internal/qualifier/QualifierValue.js\";\nimport { Qualifier } from \"../../../internal/qualifier/Qualifier.js\";\nimport { ACTION_TYPE_TO_EFFECT_MODE_MAP, EFFECT_MODE_TO_ACTION_TYPE_MAP } from \"../../../internal/internalConstants.js\";\n/**\n * @description A class that defines a simple effect of the type e_{effectName}\n * @extends SDK.Action\n * @memberOf Actions.Effect\n * @see Visit {@link Actions.Effect|Effect} for an example\n */\nclass SimpleEffectAction extends Action {\n    constructor(effectType, level) {\n        super();\n        this._actionModel = {};\n        this._actionModel.actionType = EFFECT_MODE_TO_ACTION_TYPE_MAP[effectType] || effectType;\n        const qualifierEffect = this.createEffectQualifier(effectType, level);\n        this.addQualifier(qualifierEffect);\n    }\n    createEffectQualifier(effectType, level) {\n        let qualifierValue;\n        if (level) {\n            qualifierValue = new QualifierValue([effectType, `${level}`]).setDelimiter(':');\n        }\n        else {\n            qualifierValue = new QualifierValue(effectType);\n        }\n        return new Qualifier('e', qualifierValue);\n    }\n    static fromJson(actionModel) {\n        const { actionType, level, strength } = actionModel;\n        const effectType = ACTION_TYPE_TO_EFFECT_MODE_MAP[actionType] || actionType;\n        // We are using this() to allow inheriting classes to use super.fromJson.apply(this, [actionModel])\n        // This allows the inheriting classes to determine the class to be created\n        // @ts-ignore\n        const result = new this(effectType, level ? level : strength);\n        return result;\n    }\n}\nexport { SimpleEffectAction };\n"],"mappings":"AAAA,SAASA,MAAT,QAAuB,6BAAvB;AACA,SAASC,cAAT,QAA+B,+CAA/B;AACA,SAASC,SAAT,QAA0B,0CAA1B;AACA,SAASC,8BAAT,EAAyCC,8BAAzC,QAA+E,wCAA/E;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,MAAMC,kBAAN,SAAiCL,MAAjC,CAAwC;EACpCM,WAAW,CAACC,UAAD,EAAaC,KAAb,EAAoB;IAC3B;IACA,KAAKC,YAAL,GAAoB,EAApB;IACA,KAAKA,YAAL,CAAkBC,UAAlB,GAA+BN,8BAA8B,CAACG,UAAD,CAA9B,IAA8CA,UAA7E;IACA,MAAMI,eAAe,GAAG,KAAKC,qBAAL,CAA2BL,UAA3B,EAAuCC,KAAvC,CAAxB;IACA,KAAKK,YAAL,CAAkBF,eAAlB;EACH;;EACDC,qBAAqB,CAACL,UAAD,EAAaC,KAAb,EAAoB;IACrC,IAAIM,cAAJ;;IACA,IAAIN,KAAJ,EAAW;MACPM,cAAc,GAAG,IAAIb,cAAJ,CAAmB,CAACM,UAAD,EAAc,GAAEC,KAAM,EAAtB,CAAnB,EAA6CO,YAA7C,CAA0D,GAA1D,CAAjB;IACH,CAFD,MAGK;MACDD,cAAc,GAAG,IAAIb,cAAJ,CAAmBM,UAAnB,CAAjB;IACH;;IACD,OAAO,IAAIL,SAAJ,CAAc,GAAd,EAAmBY,cAAnB,CAAP;EACH;;EACc,OAARE,QAAQ,CAACC,WAAD,EAAc;IACzB,MAAM;MAAEP,UAAF;MAAcF,KAAd;MAAqBU;IAArB,IAAkCD,WAAxC;IACA,MAAMV,UAAU,GAAGJ,8BAA8B,CAACO,UAAD,CAA9B,IAA8CA,UAAjE,CAFyB,CAGzB;IACA;IACA;;IACA,MAAMS,MAAM,GAAG,IAAI,IAAJ,CAASZ,UAAT,EAAqBC,KAAK,GAAGA,KAAH,GAAWU,QAArC,CAAf;IACA,OAAOC,MAAP;EACH;;AA1BmC;;AA4BxC,SAASd,kBAAT"},"metadata":{},"sourceType":"module"}