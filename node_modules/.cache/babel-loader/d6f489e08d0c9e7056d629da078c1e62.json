{"ast":null,"code":"import { Qualifier } from \"../../internal/qualifier/Qualifier.js\";\nimport { QualifierValue } from \"../../internal/qualifier/QualifierValue.js\";\nimport { Action } from \"../../internal/Action.js\";\n/**\n * @description Changes the main background color to the one specified, as if a 'theme change' was applied (e.g. dark mode vs light mode).\n * @extends SDK.Action\n * @memberOf {Actions.Effect}\n * @see Visit {@link Actions.Effect|Effect} for an example\n */\n\nclass ThemeEffect extends Action {\n  constructor(color) {\n    super();\n    this.effectName = 'theme';\n    this.color = color;\n  }\n  /**\n   * @description The sensitivity to photographic elements of an image.\n   *              A value of 0 treats the whole image as non-photographic.\n   *              A value of 200 treats the whole image as photographic, so no theme change is applied.\n   * @param {number} photosensitivity\n   * @return {this}\n   */\n\n\n  photosensitivity(photosensitivity) {\n    this._photosensitivity = photosensitivity;\n    return this;\n  }\n\n  prepareQualifiers() {\n    const sensitivity = this._photosensitivity ? `:photosensitivity_${this._photosensitivity}` : ''; // Replace # in hex colors (#fff -> fff)\n\n    const val = `${this.effectName}:color_${this.color.replace('#', '')}${sensitivity}`;\n    this.addQualifier(new Qualifier('e', new QualifierValue(val)));\n    return;\n  }\n\n}\n\nexport { ThemeEffect };","map":{"version":3,"names":["Qualifier","QualifierValue","Action","ThemeEffect","constructor","color","effectName","photosensitivity","_photosensitivity","prepareQualifiers","sensitivity","val","replace","addQualifier"],"sources":["C:/Users/DELL/OneDrive/Desktop/New folder (2)/New folder/node_modules/@cloudinary/transformation-builder-sdk/actions/effect/Theme.js"],"sourcesContent":["import { Qualifier } from \"../../internal/qualifier/Qualifier.js\";\nimport { QualifierValue } from \"../../internal/qualifier/QualifierValue.js\";\nimport { Action } from \"../../internal/Action.js\";\n/**\n * @description Changes the main background color to the one specified, as if a 'theme change' was applied (e.g. dark mode vs light mode).\n * @extends SDK.Action\n * @memberOf {Actions.Effect}\n * @see Visit {@link Actions.Effect|Effect} for an example\n */\nclass ThemeEffect extends Action {\n    constructor(color) {\n        super();\n        this.effectName = 'theme';\n        this.color = color;\n    }\n    /**\n     * @description The sensitivity to photographic elements of an image.\n     *              A value of 0 treats the whole image as non-photographic.\n     *              A value of 200 treats the whole image as photographic, so no theme change is applied.\n     * @param {number} photosensitivity\n     * @return {this}\n     */\n    photosensitivity(photosensitivity) {\n        this._photosensitivity = photosensitivity;\n        return this;\n    }\n    prepareQualifiers() {\n        const sensitivity = this._photosensitivity ? `:photosensitivity_${this._photosensitivity}` : '';\n        // Replace # in hex colors (#fff -> fff)\n        const val = `${this.effectName}:color_${this.color.replace('#', '')}${sensitivity}`;\n        this.addQualifier(new Qualifier('e', new QualifierValue(val)));\n        return;\n    }\n}\nexport { ThemeEffect };\n"],"mappings":"AAAA,SAASA,SAAT,QAA0B,uCAA1B;AACA,SAASC,cAAT,QAA+B,4CAA/B;AACA,SAASC,MAAT,QAAuB,0BAAvB;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,MAAMC,WAAN,SAA0BD,MAA1B,CAAiC;EAC7BE,WAAW,CAACC,KAAD,EAAQ;IACf;IACA,KAAKC,UAAL,GAAkB,OAAlB;IACA,KAAKD,KAAL,GAAaA,KAAb;EACH;EACD;AACJ;AACA;AACA;AACA;AACA;AACA;;;EACIE,gBAAgB,CAACA,gBAAD,EAAmB;IAC/B,KAAKC,iBAAL,GAAyBD,gBAAzB;IACA,OAAO,IAAP;EACH;;EACDE,iBAAiB,GAAG;IAChB,MAAMC,WAAW,GAAG,KAAKF,iBAAL,GAA0B,qBAAoB,KAAKA,iBAAkB,EAArE,GAAyE,EAA7F,CADgB,CAEhB;;IACA,MAAMG,GAAG,GAAI,GAAE,KAAKL,UAAW,UAAS,KAAKD,KAAL,CAAWO,OAAX,CAAmB,GAAnB,EAAwB,EAAxB,CAA4B,GAAEF,WAAY,EAAlF;IACA,KAAKG,YAAL,CAAkB,IAAIb,SAAJ,CAAc,GAAd,EAAmB,IAAIC,cAAJ,CAAmBU,GAAnB,CAAnB,CAAlB;IACA;EACH;;AAvB4B;;AAyBjC,SAASR,WAAT"},"metadata":{},"sourceType":"module"}