{"ast":null,"code":"import Layer from './layer.js';\nimport { isString } from \"../../internal/utils/dataStructureUtils.js\";\nimport { base64Encode } from \"../../internal/utils/base64Encode.js\";\n\nclass FetchLayer extends Layer {\n  /**\n   * @class FetchLayer\n   * @classdesc Creates an image layer using a remote URL.\n   * @param {Object|string} options - layer parameters or a url\n   * @param {string} options.url the url of the image to fetch\n   */\n  constructor(options) {\n    super(options);\n\n    if (isString(options)) {\n      this.options.url = options;\n    } else if (options != null ? options.url : void 0) {\n      this.options.url = options.url;\n    }\n  }\n\n  url(url) {\n    this.options.url = url;\n    return this;\n  }\n  /**\n   * generate the string representation of the layer\n   * @function FetchLayer#toString\n   * @return {String}\n   */\n\n\n  toString() {\n    return `fetch:${base64Encode(this.options.url)}`;\n  }\n\n}\n\nexport default FetchLayer;","map":{"version":3,"names":["Layer","isString","base64Encode","FetchLayer","constructor","options","url","toString"],"sources":["C:/Users/DELL/OneDrive/Desktop/New folder (2)/New folder/node_modules/@cloudinary/url-gen/backwards/legacyLayer/fetchlayer.js"],"sourcesContent":["import Layer from './layer.js';\nimport { isString } from \"../../internal/utils/dataStructureUtils.js\";\nimport { base64Encode } from \"../../internal/utils/base64Encode.js\";\nclass FetchLayer extends Layer {\n    /**\n     * @class FetchLayer\n     * @classdesc Creates an image layer using a remote URL.\n     * @param {Object|string} options - layer parameters or a url\n     * @param {string} options.url the url of the image to fetch\n     */\n    constructor(options) {\n        super(options);\n        if (isString(options)) {\n            this.options.url = options;\n        }\n        else if (options != null ? options.url : void 0) {\n            this.options.url = options.url;\n        }\n    }\n    url(url) {\n        this.options.url = url;\n        return this;\n    }\n    /**\n     * generate the string representation of the layer\n     * @function FetchLayer#toString\n     * @return {String}\n     */\n    toString() {\n        return `fetch:${base64Encode(this.options.url)}`;\n    }\n}\nexport default FetchLayer;\n"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,YAAlB;AACA,SAASC,QAAT,QAAyB,4CAAzB;AACA,SAASC,YAAT,QAA6B,sCAA7B;;AACA,MAAMC,UAAN,SAAyBH,KAAzB,CAA+B;EAC3B;AACJ;AACA;AACA;AACA;AACA;EACII,WAAW,CAACC,OAAD,EAAU;IACjB,MAAMA,OAAN;;IACA,IAAIJ,QAAQ,CAACI,OAAD,CAAZ,EAAuB;MACnB,KAAKA,OAAL,CAAaC,GAAb,GAAmBD,OAAnB;IACH,CAFD,MAGK,IAAIA,OAAO,IAAI,IAAX,GAAkBA,OAAO,CAACC,GAA1B,GAAgC,KAAK,CAAzC,EAA4C;MAC7C,KAAKD,OAAL,CAAaC,GAAb,GAAmBD,OAAO,CAACC,GAA3B;IACH;EACJ;;EACDA,GAAG,CAACA,GAAD,EAAM;IACL,KAAKD,OAAL,CAAaC,GAAb,GAAmBA,GAAnB;IACA,OAAO,IAAP;EACH;EACD;AACJ;AACA;AACA;AACA;;;EACIC,QAAQ,GAAG;IACP,OAAQ,SAAQL,YAAY,CAAC,KAAKG,OAAL,CAAaC,GAAd,CAAmB,EAA/C;EACH;;AA3B0B;;AA6B/B,eAAeH,UAAf"},"metadata":{},"sourceType":"module"}