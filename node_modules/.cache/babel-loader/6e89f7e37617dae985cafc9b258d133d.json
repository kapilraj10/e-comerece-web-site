{"ast":null,"code":"import { Action } from \"../../internal/Action.js\";\nimport { Qualifier } from \"../../internal/qualifier/Qualifier.js\";\nimport { QualifierValue } from \"../../internal/qualifier/QualifierValue.js\";\nimport { clip, clipEvenOdd } from \"../../qualifiers/flag.js\";\n/**\n * @description  Defines the clipping path to use when trimming pixels.\n * @extends SDK.Action\n * @memberOf Actions.PSDTools\n * @see Visit {@link Actions.PSDTools| PSDTools} for an example\n */\n\nclass ClipAction extends Action {\n  constructor() {\n    super();\n    this.isEvenOdd = false;\n  }\n  /**\n   * @description The name of the path to clip by\n   * @param {string} path\n   * @return {this}\n   */\n\n\n  byName(path) {\n    this.path = path;\n    return this;\n  }\n  /**\n   * @description The index of the path to clip by\n   * @param {number} path\n   * @return {this}\n   */\n\n\n  byIndex(path) {\n    this.path = path;\n    return this;\n  }\n  /**\n   * @description Trims pixels according to a clipping path included in the original image using an evenodd clipping rule.\n   * @return {this}\n   */\n\n\n  evenOdd() {\n    this.isEvenOdd = true;\n    return this;\n  }\n\n  prepareQualifiers() {\n    let qualifierValue;\n\n    if (typeof this.path === 'string') {\n      qualifierValue = new QualifierValue(['name', this.path]).setDelimiter(':');\n    } else {\n      qualifierValue = new QualifierValue(this.path);\n    } //handles flag\n\n\n    if (this.isEvenOdd) {\n      this.addFlag(clipEvenOdd());\n    } else {\n      this.addFlag(clip());\n    }\n\n    this.addQualifier(new Qualifier('pg', qualifierValue));\n    return this;\n  }\n\n}\n\nexport { ClipAction };","map":{"version":3,"names":["Action","Qualifier","QualifierValue","clip","clipEvenOdd","ClipAction","constructor","isEvenOdd","byName","path","byIndex","evenOdd","prepareQualifiers","qualifierValue","setDelimiter","addFlag","addQualifier"],"sources":["C:/Users/DELL/OneDrive/Desktop/New folder (2)/New folder/node_modules/@cloudinary/transformation-builder-sdk/actions/psdTools/ClipAction.js"],"sourcesContent":["import { Action } from \"../../internal/Action.js\";\nimport { Qualifier } from \"../../internal/qualifier/Qualifier.js\";\nimport { QualifierValue } from \"../../internal/qualifier/QualifierValue.js\";\nimport { clip, clipEvenOdd } from \"../../qualifiers/flag.js\";\n/**\n * @description  Defines the clipping path to use when trimming pixels.\n * @extends SDK.Action\n * @memberOf Actions.PSDTools\n * @see Visit {@link Actions.PSDTools| PSDTools} for an example\n */\nclass ClipAction extends Action {\n    constructor() {\n        super();\n        this.isEvenOdd = false;\n    }\n    /**\n     * @description The name of the path to clip by\n     * @param {string} path\n     * @return {this}\n     */\n    byName(path) {\n        this.path = path;\n        return this;\n    }\n    /**\n     * @description The index of the path to clip by\n     * @param {number} path\n     * @return {this}\n     */\n    byIndex(path) {\n        this.path = path;\n        return this;\n    }\n    /**\n     * @description Trims pixels according to a clipping path included in the original image using an evenodd clipping rule.\n     * @return {this}\n     */\n    evenOdd() {\n        this.isEvenOdd = true;\n        return this;\n    }\n    prepareQualifiers() {\n        let qualifierValue;\n        if (typeof this.path === 'string') {\n            qualifierValue = new QualifierValue(['name', this.path]).setDelimiter(':');\n        }\n        else {\n            qualifierValue = new QualifierValue(this.path);\n        }\n        //handles flag\n        if (this.isEvenOdd) {\n            this.addFlag(clipEvenOdd());\n        }\n        else {\n            this.addFlag(clip());\n        }\n        this.addQualifier(new Qualifier('pg', qualifierValue));\n        return this;\n    }\n}\nexport { ClipAction };\n"],"mappings":"AAAA,SAASA,MAAT,QAAuB,0BAAvB;AACA,SAASC,SAAT,QAA0B,uCAA1B;AACA,SAASC,cAAT,QAA+B,4CAA/B;AACA,SAASC,IAAT,EAAeC,WAAf,QAAkC,0BAAlC;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,MAAMC,UAAN,SAAyBL,MAAzB,CAAgC;EAC5BM,WAAW,GAAG;IACV;IACA,KAAKC,SAAL,GAAiB,KAAjB;EACH;EACD;AACJ;AACA;AACA;AACA;;;EACIC,MAAM,CAACC,IAAD,EAAO;IACT,KAAKA,IAAL,GAAYA,IAAZ;IACA,OAAO,IAAP;EACH;EACD;AACJ;AACA;AACA;AACA;;;EACIC,OAAO,CAACD,IAAD,EAAO;IACV,KAAKA,IAAL,GAAYA,IAAZ;IACA,OAAO,IAAP;EACH;EACD;AACJ;AACA;AACA;;;EACIE,OAAO,GAAG;IACN,KAAKJ,SAAL,GAAiB,IAAjB;IACA,OAAO,IAAP;EACH;;EACDK,iBAAiB,GAAG;IAChB,IAAIC,cAAJ;;IACA,IAAI,OAAO,KAAKJ,IAAZ,KAAqB,QAAzB,EAAmC;MAC/BI,cAAc,GAAG,IAAIX,cAAJ,CAAmB,CAAC,MAAD,EAAS,KAAKO,IAAd,CAAnB,EAAwCK,YAAxC,CAAqD,GAArD,CAAjB;IACH,CAFD,MAGK;MACDD,cAAc,GAAG,IAAIX,cAAJ,CAAmB,KAAKO,IAAxB,CAAjB;IACH,CAPe,CAQhB;;;IACA,IAAI,KAAKF,SAAT,EAAoB;MAChB,KAAKQ,OAAL,CAAaX,WAAW,EAAxB;IACH,CAFD,MAGK;MACD,KAAKW,OAAL,CAAaZ,IAAI,EAAjB;IACH;;IACD,KAAKa,YAAL,CAAkB,IAAIf,SAAJ,CAAc,IAAd,EAAoBY,cAApB,CAAlB;IACA,OAAO,IAAP;EACH;;AAhD2B;;AAkDhC,SAASR,UAAT"},"metadata":{},"sourceType":"module"}