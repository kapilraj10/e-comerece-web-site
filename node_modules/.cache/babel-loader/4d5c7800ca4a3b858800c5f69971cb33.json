{"ast":null,"code":"import { base64Encode } from \"../../internal/utils/base64Encode.js\";\nimport { Action } from \"../../internal/Action.js\";\nimport { QualifierValue } from \"../../internal/qualifier/QualifierValue.js\";\nimport { Qualifier } from \"../../internal/qualifier/Qualifier.js\";\n/**\n * @memberOf Actions.CustomFunction\n * @see Visit {@link Actions.CustomFunction|Custom functions} for an example\n */\n\nclass CustomFunctionAction extends Action {\n  /**\n   *\n   * @param {string} fn The custom function to use, can be a URL or a publicID\n   */\n  constructor(fn) {\n    super();\n    this.fn = fn;\n  }\n\n  encodeCustomFunctionString(fn) {\n    const encodedSource = base64Encode(fn);\n    return encodedSource;\n  }\n  /**\n   * Use a WASM as a custom function,\n   * Used with the builders of `remote` and `wasm` from {@link Actions.CustomFunction|Custom functions}\n   */\n\n\n  asWasm() {\n    this.mode = 'wasm';\n    return this;\n  }\n  /**\n   * Use a remote URL as a custom function\n   * Used with the builders of `remote` and `wasm` from {@link Actions.CustomFunction|Custom functions}\n   */\n\n\n  asRemote() {\n    this.mode = 'remote';\n    return this;\n  }\n\n  prepareQualifiers() {\n    this.encodedFn = this.fn;\n\n    if (this.mode === 'remote') {\n      this.encodedFn = this.encodeCustomFunctionString(this.fn);\n    }\n\n    return this.addQualifier(new Qualifier('fn', new QualifierValue([this.pre, this.mode, this.encodedFn])));\n  }\n\n  toString() {\n    return super.toString().replace(/\\//g, ':');\n  }\n\n}\n\nexport default CustomFunctionAction;","map":{"version":3,"names":["base64Encode","Action","QualifierValue","Qualifier","CustomFunctionAction","constructor","fn","encodeCustomFunctionString","encodedSource","asWasm","mode","asRemote","prepareQualifiers","encodedFn","addQualifier","pre","toString","replace"],"sources":["C:/Users/DELL/OneDrive/Desktop/New folder (2)/New folder/node_modules/@cloudinary/transformation-builder-sdk/actions/customFunction/CustomFunctionAction.js"],"sourcesContent":["import { base64Encode } from \"../../internal/utils/base64Encode.js\";\nimport { Action } from \"../../internal/Action.js\";\nimport { QualifierValue } from \"../../internal/qualifier/QualifierValue.js\";\nimport { Qualifier } from \"../../internal/qualifier/Qualifier.js\";\n/**\n * @memberOf Actions.CustomFunction\n * @see Visit {@link Actions.CustomFunction|Custom functions} for an example\n */\nclass CustomFunctionAction extends Action {\n    /**\n     *\n     * @param {string} fn The custom function to use, can be a URL or a publicID\n     */\n    constructor(fn) {\n        super();\n        this.fn = fn;\n    }\n    encodeCustomFunctionString(fn) {\n        const encodedSource = base64Encode(fn);\n        return encodedSource;\n    }\n    /**\n     * Use a WASM as a custom function,\n     * Used with the builders of `remote` and `wasm` from {@link Actions.CustomFunction|Custom functions}\n     */\n    asWasm() {\n        this.mode = 'wasm';\n        return this;\n    }\n    /**\n     * Use a remote URL as a custom function\n     * Used with the builders of `remote` and `wasm` from {@link Actions.CustomFunction|Custom functions}\n     */\n    asRemote() {\n        this.mode = 'remote';\n        return this;\n    }\n    prepareQualifiers() {\n        this.encodedFn = this.fn;\n        if (this.mode === 'remote') {\n            this.encodedFn = this.encodeCustomFunctionString(this.fn);\n        }\n        return this.addQualifier(new Qualifier('fn', new QualifierValue([this.pre, this.mode, this.encodedFn])));\n    }\n    toString() {\n        return super.toString()\n            .replace(/\\//g, ':');\n    }\n}\nexport default CustomFunctionAction;\n"],"mappings":"AAAA,SAASA,YAAT,QAA6B,sCAA7B;AACA,SAASC,MAAT,QAAuB,0BAAvB;AACA,SAASC,cAAT,QAA+B,4CAA/B;AACA,SAASC,SAAT,QAA0B,uCAA1B;AACA;AACA;AACA;AACA;;AACA,MAAMC,oBAAN,SAAmCH,MAAnC,CAA0C;EACtC;AACJ;AACA;AACA;EACII,WAAW,CAACC,EAAD,EAAK;IACZ;IACA,KAAKA,EAAL,GAAUA,EAAV;EACH;;EACDC,0BAA0B,CAACD,EAAD,EAAK;IAC3B,MAAME,aAAa,GAAGR,YAAY,CAACM,EAAD,CAAlC;IACA,OAAOE,aAAP;EACH;EACD;AACJ;AACA;AACA;;;EACIC,MAAM,GAAG;IACL,KAAKC,IAAL,GAAY,MAAZ;IACA,OAAO,IAAP;EACH;EACD;AACJ;AACA;AACA;;;EACIC,QAAQ,GAAG;IACP,KAAKD,IAAL,GAAY,QAAZ;IACA,OAAO,IAAP;EACH;;EACDE,iBAAiB,GAAG;IAChB,KAAKC,SAAL,GAAiB,KAAKP,EAAtB;;IACA,IAAI,KAAKI,IAAL,KAAc,QAAlB,EAA4B;MACxB,KAAKG,SAAL,GAAiB,KAAKN,0BAAL,CAAgC,KAAKD,EAArC,CAAjB;IACH;;IACD,OAAO,KAAKQ,YAAL,CAAkB,IAAIX,SAAJ,CAAc,IAAd,EAAoB,IAAID,cAAJ,CAAmB,CAAC,KAAKa,GAAN,EAAW,KAAKL,IAAhB,EAAsB,KAAKG,SAA3B,CAAnB,CAApB,CAAlB,CAAP;EACH;;EACDG,QAAQ,GAAG;IACP,OAAO,MAAMA,QAAN,GACFC,OADE,CACM,KADN,EACa,GADb,CAAP;EAEH;;AAvCqC;;AAyC1C,eAAeb,oBAAf"},"metadata":{},"sourceType":"module"}