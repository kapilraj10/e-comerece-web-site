{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport { toast } from \"react-toastify\";\nconst cartFromLocalStorage = localStorage.getItem('myProjectCart');\nconst cartItem = cartFromLocalStorage ? JSON.parse(cartFromLocalStorage) : [];\nconst total = cartItem.length ? Number(cartItem.map(item => item.total).reduce((a, b) => a + b).toFixed(2)) : 0;\nconst totalProduct = cartItem.length ? Number(cartItem.map(item => item.quantity).reduce((a, b) => a + b).toFixed(2)) : 0;\nconst cartSlice = createSlice({\n  name: 'cart',\n  initialState: {\n    items: cartItem,\n    total: total,\n    totalProduct: totalProduct\n  },\n  reducers: {\n    addToCart: (state, action) => {\n      const {\n        id,\n        title,\n        price,\n        image\n      } = action.payload;\n      const alreadyExists = state.items.find(item => item.id === id);\n\n      if (alreadyExists) {\n        alreadyExists.quantity++;\n        alreadyExists.total += price;\n        toast.dismiss();\n        toast.info('Product Quantity Increased in Cart');\n      } else {\n        state.items.push({\n          id,\n          title,\n          price,\n          image,\n          quantity: 1,\n          total: price\n        });\n        toast.dismiss();\n        toast.success('Product Added to Cart');\n      }\n\n      const total = state.items.map(item => item.total).reduce((a, b) => a + b);\n      state.total = Number(total.toFixed(2));\n      state.totalProduct = state.totalProduct + 1;\n      localStorage.setItem('myProjectCart', JSON.stringify(state.items));\n    },\n    decrementQuantity: (state, action) => {\n      const {\n        id,\n        price\n      } = action.payload;\n      const targetItem = state.items.find(item => item.id === id);\n      targetItem.quantity -= 1;\n      targetItem.total -= price;\n      state.total = Number((state.total - price).toFixed(2));\n      state.totalProduct = state.totalProduct - 1;\n      localStorage.setItem('myProjectCart', JSON.stringify(state.items));\n    },\n    incrementQuantity: (state, action) => {\n      const {\n        id,\n        price\n      } = action.payload;\n      const targetItem = state.items.find(item => item.id === id);\n      targetItem.quantity += 1;\n      targetItem.total += price;\n      state.total = Number((state.total + price).toFixed(2));\n      state.totalProduct = state.totalProduct + 1;\n      localStorage.setItem('myProjectCart', JSON.stringify(state.items));\n    },\n    removeFromCart: (state, action) => {\n      const id = action.payload;\n      state.items = state.items.filter(item => item.id !== id);\n      localStorage.setItem('myProjectCart', JSON.stringify(state.items));\n\n      if (state.items.length) {\n        const total = state.items.map(item => item.total).reduce((a, b) => a + b);\n        state.total = Number(total.toFixed(2));\n        const totalProduct = state.items.map(item => item.quantity).reduce((a, b) => a + b);\n        state.totalProduct = Number(totalProduct);\n      } else {\n        state.total = 0;\n        state.totalProduct = 0;\n      }\n    },\n    clearCart: state => {\n      state.items = [];\n      state.total = 0;\n      state.totalProduct = 0;\n      localStorage.setItem('myProjectCart', JSON.stringify(state.items));\n    }\n  }\n});\nexport const {\n  addToCart,\n  removeFromCart,\n  decrementQuantity,\n  incrementQuantity,\n  clearCart\n} = cartSlice.actions;\nexport default cartSlice.reducer;","map":{"version":3,"names":["createSlice","toast","cartFromLocalStorage","localStorage","getItem","cartItem","JSON","parse","total","length","Number","map","item","reduce","a","b","toFixed","totalProduct","quantity","cartSlice","name","initialState","items","reducers","addToCart","state","action","id","title","price","image","payload","alreadyExists","find","dismiss","info","push","success","setItem","stringify","decrementQuantity","targetItem","incrementQuantity","removeFromCart","filter","clearCart","actions","reducer"],"sources":["C:/Users/DELL/OneDrive/Desktop/New folder/New folder/src/App/features/cartSlice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\nimport { toast } from \"react-toastify\";\n\nconst cartFromLocalStorage = localStorage.getItem('myProjectCart')\nconst cartItem = cartFromLocalStorage ? JSON.parse(cartFromLocalStorage) : [];\nconst total = cartItem.length ? Number((cartItem.map(item => item.total).reduce((a, b) => a + b)).toFixed(2)) : 0 ;\nconst totalProduct = cartItem.length ? Number((cartItem.map(item => item.quantity).reduce((a, b) => a + b)).toFixed(2)) : 0 ;\n\nconst cartSlice = createSlice({\n    name: 'cart',\n    initialState:{\n        items: cartItem,\n        total: total,\n        totalProduct: totalProduct\n    },\n    reducers: {\n\n        addToCart: (state, action) => {\n            const {id, title, price, image} = action.payload\n            const alreadyExists = state.items.find(item => item.id === id)\n            \n            if(alreadyExists) {\n                alreadyExists.quantity ++;\n                alreadyExists.total += price;\n\n                toast.dismiss()\n                toast.info('Product Quantity Increased in Cart')\n            } else {\n                state.items.push({id, title, price, image, quantity:1, total: price})\n\n                toast.dismiss()\n                toast.success('Product Added to Cart')\n            }\n            const total = state.items.map(item => item.total).reduce((a, b) => a + b)\n            state.total = Number(total.toFixed(2));\n            state.totalProduct = state.totalProduct + 1;\n            \n            localStorage.setItem('myProjectCart', JSON.stringify(state.items))\n        },\n        \n        decrementQuantity: (state, action) => {\n            const { id, price } = action.payload;\n            const targetItem = state.items.find(item => item.id === id )\n            targetItem.quantity -= 1 ;\n            targetItem.total -= price ;\n            state.total = Number((state.total - price).toFixed(2));\n            state.totalProduct = state.totalProduct - 1;\n            \n            localStorage.setItem('myProjectCart', JSON.stringify(state.items))\n        },\n        \n        incrementQuantity: (state, action) => {\n            const { id, price } = action.payload;\n            const targetItem = state.items.find(item => item.id === id )\n            targetItem.quantity += 1 ;\n            targetItem.total += price ;\n\n            state.total = Number((state.total + price).toFixed(2));\n            state.totalProduct = state.totalProduct + 1;\n            \n            localStorage.setItem('myProjectCart', JSON.stringify(state.items))\n        },\n\n        removeFromCart: (state, action) => {\n            const id = action.payload;\n\n            state.items = state.items.filter(item => item.id !== id);\n            localStorage.setItem('myProjectCart', JSON.stringify(state.items))\n\n            if(state.items.length){\n                const total = state.items.map(item => item.total).reduce((a, b) => a + b)\n                state.total = Number(total.toFixed(2));\n                \n                const totalProduct = state.items.map(item => item.quantity).reduce((a, b) => a + b)\n                state.totalProduct = Number(totalProduct)\n            } else {\n                state.total = 0;\n                state.totalProduct = 0;\n            }\n        },\n\n        clearCart: (state) => {\n           state.items = [];\n           state.total = 0;\n           state.totalProduct = 0;\n\n           localStorage.setItem('myProjectCart', JSON.stringify(state.items))\n        }\n    }\n})\n\nexport const { addToCart, removeFromCart, decrementQuantity, incrementQuantity, clearCart } = cartSlice.actions\n\nexport default cartSlice.reducer"],"mappings":"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"},"metadata":{},"sourceType":"module"}