{"ast":null,"code":"import { Action } from \"../../internal/Action.js\";\nimport { Qualifier } from \"../../internal/qualifier/Qualifier.js\";\n/**\n * @description Uses generative AI to replace parts of your image with something else.\n * @extends SDK.Action\n * @memberOf Actions.Effect\n * @see Visit {@link Actions.Effect|Effect} for an example\n */\n\nclass GenerativeReplace extends Action {\n  constructor() {\n    super();\n    this._preserveGeometry = false;\n    this._detectMultiple = false;\n    this._actionModel.actionType = \"generativeReplace\";\n  }\n\n  from(value) {\n    this._from = value;\n    this._actionModel.from = value;\n    return this;\n  }\n\n  to(value) {\n    this._to = value;\n    this._actionModel.to = value;\n    return this;\n  }\n\n  preserveGeometry() {\n    let value = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n    this._preserveGeometry = value;\n\n    if (value) {\n      this._actionModel.preserveGeometry = true;\n    }\n\n    return this;\n  }\n\n  detectMultiple() {\n    let value = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n    this._detectMultiple = value;\n\n    if (this._detectMultiple) {\n      this._actionModel.detectMultiple = this._detectMultiple;\n    }\n\n    return this;\n  }\n\n  prepareQualifiers() {\n    let str = `gen_replace:from_${this._from};to_${this._to}`;\n\n    if (this._preserveGeometry) {\n      str += `;preserve-geometry_true`;\n    }\n\n    if (this._detectMultiple) {\n      str += `;multiple_true`;\n    }\n\n    this.addQualifier(new Qualifier(\"e\", str));\n  }\n\n  static fromJson(actionModel) {\n    const {\n      from,\n      to,\n      preserveGeometry,\n      detectMultiple\n    } = actionModel;\n    const result = new this();\n    result.from(from);\n    result.to(to);\n\n    if (preserveGeometry) {\n      result.preserveGeometry();\n    }\n\n    if (detectMultiple) {\n      result.detectMultiple();\n    }\n\n    return result;\n  }\n\n}\n\nexport { GenerativeReplace };","map":{"version":3,"names":["Action","Qualifier","GenerativeReplace","constructor","_preserveGeometry","_detectMultiple","_actionModel","actionType","from","value","_from","to","_to","preserveGeometry","detectMultiple","prepareQualifiers","str","addQualifier","fromJson","actionModel","result"],"sources":["C:/Users/DELL/OneDrive/Desktop/New folder (2)/New folder/node_modules/@cloudinary/transformation-builder-sdk/actions/effect/GenerativeReplace.js"],"sourcesContent":["import { Action } from \"../../internal/Action.js\";\nimport { Qualifier } from \"../../internal/qualifier/Qualifier.js\";\n/**\n * @description Uses generative AI to replace parts of your image with something else.\n * @extends SDK.Action\n * @memberOf Actions.Effect\n * @see Visit {@link Actions.Effect|Effect} for an example\n */\nclass GenerativeReplace extends Action {\n    constructor() {\n        super();\n        this._preserveGeometry = false;\n        this._detectMultiple = false;\n        this._actionModel.actionType = \"generativeReplace\";\n    }\n    from(value) {\n        this._from = value;\n        this._actionModel.from = value;\n        return this;\n    }\n    to(value) {\n        this._to = value;\n        this._actionModel.to = value;\n        return this;\n    }\n    preserveGeometry(value = true) {\n        this._preserveGeometry = value;\n        if (value) {\n            this._actionModel.preserveGeometry = true;\n        }\n        return this;\n    }\n    detectMultiple(value = true) {\n        this._detectMultiple = value;\n        if (this._detectMultiple) {\n            this._actionModel.detectMultiple = this._detectMultiple;\n        }\n        return this;\n    }\n    prepareQualifiers() {\n        let str = `gen_replace:from_${this._from};to_${this._to}`;\n        if (this._preserveGeometry) {\n            str += `;preserve-geometry_true`;\n        }\n        if (this._detectMultiple) {\n            str += `;multiple_true`;\n        }\n        this.addQualifier(new Qualifier(\"e\", str));\n    }\n    static fromJson(actionModel) {\n        const { from, to, preserveGeometry, detectMultiple } = actionModel;\n        const result = new this();\n        result.from(from);\n        result.to(to);\n        if (preserveGeometry) {\n            result.preserveGeometry();\n        }\n        if (detectMultiple) {\n            result.detectMultiple();\n        }\n        return result;\n    }\n}\nexport { GenerativeReplace };\n"],"mappings":"AAAA,SAASA,MAAT,QAAuB,0BAAvB;AACA,SAASC,SAAT,QAA0B,uCAA1B;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,MAAMC,iBAAN,SAAgCF,MAAhC,CAAuC;EACnCG,WAAW,GAAG;IACV;IACA,KAAKC,iBAAL,GAAyB,KAAzB;IACA,KAAKC,eAAL,GAAuB,KAAvB;IACA,KAAKC,YAAL,CAAkBC,UAAlB,GAA+B,mBAA/B;EACH;;EACDC,IAAI,CAACC,KAAD,EAAQ;IACR,KAAKC,KAAL,GAAaD,KAAb;IACA,KAAKH,YAAL,CAAkBE,IAAlB,GAAyBC,KAAzB;IACA,OAAO,IAAP;EACH;;EACDE,EAAE,CAACF,KAAD,EAAQ;IACN,KAAKG,GAAL,GAAWH,KAAX;IACA,KAAKH,YAAL,CAAkBK,EAAlB,GAAuBF,KAAvB;IACA,OAAO,IAAP;EACH;;EACDI,gBAAgB,GAAe;IAAA,IAAdJ,KAAc,uEAAN,IAAM;IAC3B,KAAKL,iBAAL,GAAyBK,KAAzB;;IACA,IAAIA,KAAJ,EAAW;MACP,KAAKH,YAAL,CAAkBO,gBAAlB,GAAqC,IAArC;IACH;;IACD,OAAO,IAAP;EACH;;EACDC,cAAc,GAAe;IAAA,IAAdL,KAAc,uEAAN,IAAM;IACzB,KAAKJ,eAAL,GAAuBI,KAAvB;;IACA,IAAI,KAAKJ,eAAT,EAA0B;MACtB,KAAKC,YAAL,CAAkBQ,cAAlB,GAAmC,KAAKT,eAAxC;IACH;;IACD,OAAO,IAAP;EACH;;EACDU,iBAAiB,GAAG;IAChB,IAAIC,GAAG,GAAI,oBAAmB,KAAKN,KAAM,OAAM,KAAKE,GAAI,EAAxD;;IACA,IAAI,KAAKR,iBAAT,EAA4B;MACxBY,GAAG,IAAK,yBAAR;IACH;;IACD,IAAI,KAAKX,eAAT,EAA0B;MACtBW,GAAG,IAAK,gBAAR;IACH;;IACD,KAAKC,YAAL,CAAkB,IAAIhB,SAAJ,CAAc,GAAd,EAAmBe,GAAnB,CAAlB;EACH;;EACc,OAARE,QAAQ,CAACC,WAAD,EAAc;IACzB,MAAM;MAAEX,IAAF;MAAQG,EAAR;MAAYE,gBAAZ;MAA8BC;IAA9B,IAAiDK,WAAvD;IACA,MAAMC,MAAM,GAAG,IAAI,IAAJ,EAAf;IACAA,MAAM,CAACZ,IAAP,CAAYA,IAAZ;IACAY,MAAM,CAACT,EAAP,CAAUA,EAAV;;IACA,IAAIE,gBAAJ,EAAsB;MAClBO,MAAM,CAACP,gBAAP;IACH;;IACD,IAAIC,cAAJ,EAAoB;MAChBM,MAAM,CAACN,cAAP;IACH;;IACD,OAAOM,MAAP;EACH;;AArDkC;;AAuDvC,SAASlB,iBAAT"},"metadata":{},"sourceType":"module"}