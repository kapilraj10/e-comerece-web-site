{"ast":null,"code":"import { Action } from \"../../internal/Action.js\";\nimport { QualifierValue } from \"../../internal/qualifier/QualifierValue.js\";\nimport { Qualifier } from \"../../internal/qualifier/Qualifier.js\";\nimport { prepareColor } from \"../../internal/utils/prepareColor.js\";\n/**\n * @description Applies a shadow filter to the asset.\n * @memberOf Actions.Effect\n * @extends SDK.Action\n * @see Visit {@link Actions.Effect|Effect} for an example\n */\n\nclass ShadowEffectAction extends Action {\n  constructor(effectType, strength) {\n    super();\n    this._actionModel = {};\n    this._actionModel.actionType = effectType;\n    this.effectType = effectType;\n    this.addQualifier(new Qualifier('e', new QualifierValue(['shadow', strength])));\n  }\n  /**\n   * @description The strength of the shadow. (Range: 0 to 100, Server default: 40)\n   * @param {number} strength\n   * @return {this}\n   */\n\n\n  strength(strength) {\n    this._actionModel.strength = strength;\n    return this.addQualifier(new Qualifier('e', new QualifierValue(['shadow', strength])));\n  }\n  /**\n   * @description The X offset the shadow\n   * @param {number | SDK.ExpressionQualifier} x\n   * @return {this}\n   */\n\n\n  offsetX(x) {\n    this._actionModel.offsetX = x;\n    return this.addQualifier(new Qualifier('x', new QualifierValue(x)));\n  }\n  /**\n   * @description The Y offset the shadow\n   * @param {number | SDK.ExpressionQualifier} y\n   * @return {this}\n   */\n\n\n  offsetY(y) {\n    this._actionModel.offsetY = y;\n    return this.addQualifier(new Qualifier('y', new QualifierValue(y)));\n  }\n  /**\n   * @description The color of the shadow (Server default: gray)\n   * @param color\n   * @return {this}\n   */\n\n\n  color(color) {\n    this._actionModel.color = color;\n    return this.addQualifier(new Qualifier('co', new QualifierValue(prepareColor(color))));\n  }\n\n  static fromJson(actionModel) {\n    const {\n      actionType,\n      strength,\n      offsetX,\n      offsetY,\n      color\n    } = actionModel; // We are using this() to allow inheriting classes to use super.fromJson.apply(this, [actionModel])\n    // This allows the inheriting classes to determine the class to be created\n\n    const result = new this(actionType, strength);\n    offsetX && result.offsetX(offsetX);\n    offsetY && result.offsetY(offsetY);\n    color && result.color(color);\n    return result;\n  }\n\n}\n\nexport { ShadowEffectAction };","map":{"version":3,"names":["Action","QualifierValue","Qualifier","prepareColor","ShadowEffectAction","constructor","effectType","strength","_actionModel","actionType","addQualifier","offsetX","x","offsetY","y","color","fromJson","actionModel","result"],"sources":["C:/Users/DELL/OneDrive/Desktop/New folder (2)/New folder/node_modules/@cloudinary/transformation-builder-sdk/actions/effect/Shadow.js"],"sourcesContent":["import { Action } from \"../../internal/Action.js\";\nimport { QualifierValue } from \"../../internal/qualifier/QualifierValue.js\";\nimport { Qualifier } from \"../../internal/qualifier/Qualifier.js\";\nimport { prepareColor } from \"../../internal/utils/prepareColor.js\";\n/**\n * @description Applies a shadow filter to the asset.\n * @memberOf Actions.Effect\n * @extends SDK.Action\n * @see Visit {@link Actions.Effect|Effect} for an example\n */\nclass ShadowEffectAction extends Action {\n    constructor(effectType, strength) {\n        super();\n        this._actionModel = {};\n        this._actionModel.actionType = effectType;\n        this.effectType = effectType;\n        this.addQualifier(new Qualifier('e', new QualifierValue(['shadow', strength])));\n    }\n    /**\n     * @description The strength of the shadow. (Range: 0 to 100, Server default: 40)\n     * @param {number} strength\n     * @return {this}\n     */\n    strength(strength) {\n        this._actionModel.strength = strength;\n        return this.addQualifier(new Qualifier('e', new QualifierValue(['shadow', strength])));\n    }\n    /**\n     * @description The X offset the shadow\n     * @param {number | SDK.ExpressionQualifier} x\n     * @return {this}\n     */\n    offsetX(x) {\n        this._actionModel.offsetX = x;\n        return this.addQualifier(new Qualifier('x', new QualifierValue(x)));\n    }\n    /**\n     * @description The Y offset the shadow\n     * @param {number | SDK.ExpressionQualifier} y\n     * @return {this}\n     */\n    offsetY(y) {\n        this._actionModel.offsetY = y;\n        return this.addQualifier(new Qualifier('y', new QualifierValue(y)));\n    }\n    /**\n     * @description The color of the shadow (Server default: gray)\n     * @param color\n     * @return {this}\n     */\n    color(color) {\n        this._actionModel.color = color;\n        return this.addQualifier(new Qualifier('co', new QualifierValue(prepareColor(color))));\n    }\n    static fromJson(actionModel) {\n        const { actionType, strength, offsetX, offsetY, color } = actionModel;\n        // We are using this() to allow inheriting classes to use super.fromJson.apply(this, [actionModel])\n        // This allows the inheriting classes to determine the class to be created\n        const result = new this(actionType, strength);\n        offsetX && result.offsetX(offsetX);\n        offsetY && result.offsetY(offsetY);\n        color && result.color(color);\n        return result;\n    }\n}\nexport { ShadowEffectAction };\n"],"mappings":"AAAA,SAASA,MAAT,QAAuB,0BAAvB;AACA,SAASC,cAAT,QAA+B,4CAA/B;AACA,SAASC,SAAT,QAA0B,uCAA1B;AACA,SAASC,YAAT,QAA6B,sCAA7B;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,MAAMC,kBAAN,SAAiCJ,MAAjC,CAAwC;EACpCK,WAAW,CAACC,UAAD,EAAaC,QAAb,EAAuB;IAC9B;IACA,KAAKC,YAAL,GAAoB,EAApB;IACA,KAAKA,YAAL,CAAkBC,UAAlB,GAA+BH,UAA/B;IACA,KAAKA,UAAL,GAAkBA,UAAlB;IACA,KAAKI,YAAL,CAAkB,IAAIR,SAAJ,CAAc,GAAd,EAAmB,IAAID,cAAJ,CAAmB,CAAC,QAAD,EAAWM,QAAX,CAAnB,CAAnB,CAAlB;EACH;EACD;AACJ;AACA;AACA;AACA;;;EACIA,QAAQ,CAACA,QAAD,EAAW;IACf,KAAKC,YAAL,CAAkBD,QAAlB,GAA6BA,QAA7B;IACA,OAAO,KAAKG,YAAL,CAAkB,IAAIR,SAAJ,CAAc,GAAd,EAAmB,IAAID,cAAJ,CAAmB,CAAC,QAAD,EAAWM,QAAX,CAAnB,CAAnB,CAAlB,CAAP;EACH;EACD;AACJ;AACA;AACA;AACA;;;EACII,OAAO,CAACC,CAAD,EAAI;IACP,KAAKJ,YAAL,CAAkBG,OAAlB,GAA4BC,CAA5B;IACA,OAAO,KAAKF,YAAL,CAAkB,IAAIR,SAAJ,CAAc,GAAd,EAAmB,IAAID,cAAJ,CAAmBW,CAAnB,CAAnB,CAAlB,CAAP;EACH;EACD;AACJ;AACA;AACA;AACA;;;EACIC,OAAO,CAACC,CAAD,EAAI;IACP,KAAKN,YAAL,CAAkBK,OAAlB,GAA4BC,CAA5B;IACA,OAAO,KAAKJ,YAAL,CAAkB,IAAIR,SAAJ,CAAc,GAAd,EAAmB,IAAID,cAAJ,CAAmBa,CAAnB,CAAnB,CAAlB,CAAP;EACH;EACD;AACJ;AACA;AACA;AACA;;;EACIC,KAAK,CAACA,KAAD,EAAQ;IACT,KAAKP,YAAL,CAAkBO,KAAlB,GAA0BA,KAA1B;IACA,OAAO,KAAKL,YAAL,CAAkB,IAAIR,SAAJ,CAAc,IAAd,EAAoB,IAAID,cAAJ,CAAmBE,YAAY,CAACY,KAAD,CAA/B,CAApB,CAAlB,CAAP;EACH;;EACc,OAARC,QAAQ,CAACC,WAAD,EAAc;IACzB,MAAM;MAAER,UAAF;MAAcF,QAAd;MAAwBI,OAAxB;MAAiCE,OAAjC;MAA0CE;IAA1C,IAAoDE,WAA1D,CADyB,CAEzB;IACA;;IACA,MAAMC,MAAM,GAAG,IAAI,IAAJ,CAAST,UAAT,EAAqBF,QAArB,CAAf;IACAI,OAAO,IAAIO,MAAM,CAACP,OAAP,CAAeA,OAAf,CAAX;IACAE,OAAO,IAAIK,MAAM,CAACL,OAAP,CAAeA,OAAf,CAAX;IACAE,KAAK,IAAIG,MAAM,CAACH,KAAP,CAAaA,KAAb,CAAT;IACA,OAAOG,MAAP;EACH;;AArDmC;;AAuDxC,SAASd,kBAAT"},"metadata":{},"sourceType":"module"}