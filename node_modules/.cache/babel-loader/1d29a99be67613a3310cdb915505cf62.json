{"ast":null,"code":"import { Action } from \"../../internal/Action.js\";\nimport { Qualifier } from \"../../internal/qualifier/Qualifier.js\";\nconst QUALIFIER_KEY = 'a';\n/**\n * @description Rotates or flips an image or video.\n *\n * <b>Learn more:</b> {@link https://cloudinary.com/documentation/effects_and_artistic_enhancements#rotating_images|Rotating images}\n * {@link https://cloudinary.com/documentation/video_effects_and_enhancements#rotating_videos|Rotating videos}\n * @extends SDK.Action\n * @memberOf Actions.Rotate\n * @see Visit {@link Actions.Rotate|Rotate} for an example\n */\n\nclass RotateAction extends Action {\n  constructor(angle) {\n    super();\n    this._actionModel = {};\n    this.addQualifier(new Qualifier(QUALIFIER_KEY, angle));\n\n    if (angle) {\n      this._actionModel.actionType = 'rotateByAngle';\n      this._actionModel.angle = angle;\n    }\n  }\n  /**\n   * @description Rotates an asset using a defined mode.\n   * @param {Qualifiers.RotationMode | RotationModeType | string} rotationMode\n   * For a list of supported rotation modes see {@link Qualifiers.RotationMode| types of rotation modes} for\n   * possible values\n   * @return {this}\n   */\n\n\n  mode(rotationMode) {\n    this._actionModel.actionType = 'rotateByMode';\n    this._actionModel.mode = rotationMode;\n    return this.addValueToQualifier(QUALIFIER_KEY, rotationMode);\n  }\n  /**\n   * @description Rotates an asset by the specified degrees.\n   * @param {number} degrees rotation in degrees e.g 90, 45, 33\n   * @return {this}\n   */\n\n\n  angle(degrees) {\n    this._actionModel.actionType = 'rotateByAngle';\n    this._actionModel.angle = degrees;\n    return this.addValueToQualifier(QUALIFIER_KEY, degrees);\n  }\n\n  static fromJson(actionModel) {\n    const {\n      angle,\n      mode\n    } = actionModel; // We are using this() to allow inheriting classes to use super.fromJson.apply(this, [actionModel])\n    // This allows the inheriting classes to determine the class to be created\n\n    const result = mode ? new this().mode(mode) : new this(angle);\n    return result;\n  }\n\n}\n\nexport default RotateAction;","map":{"version":3,"names":["Action","Qualifier","QUALIFIER_KEY","RotateAction","constructor","angle","_actionModel","addQualifier","actionType","mode","rotationMode","addValueToQualifier","degrees","fromJson","actionModel","result"],"sources":["C:/Users/DELL/OneDrive/Desktop/New folder (2)/New folder/node_modules/@cloudinary/transformation-builder-sdk/actions/rotate/RotateAction.js"],"sourcesContent":["import { Action } from \"../../internal/Action.js\";\nimport { Qualifier } from \"../../internal/qualifier/Qualifier.js\";\nconst QUALIFIER_KEY = 'a';\n/**\n * @description Rotates or flips an image or video.\n *\n * <b>Learn more:</b> {@link https://cloudinary.com/documentation/effects_and_artistic_enhancements#rotating_images|Rotating images}\n * {@link https://cloudinary.com/documentation/video_effects_and_enhancements#rotating_videos|Rotating videos}\n * @extends SDK.Action\n * @memberOf Actions.Rotate\n * @see Visit {@link Actions.Rotate|Rotate} for an example\n */\nclass RotateAction extends Action {\n    constructor(angle) {\n        super();\n        this._actionModel = {};\n        this.addQualifier(new Qualifier(QUALIFIER_KEY, angle));\n        if (angle) {\n            this._actionModel.actionType = 'rotateByAngle';\n            this._actionModel.angle = angle;\n        }\n    }\n    /**\n     * @description Rotates an asset using a defined mode.\n     * @param {Qualifiers.RotationMode | RotationModeType | string} rotationMode\n     * For a list of supported rotation modes see {@link Qualifiers.RotationMode| types of rotation modes} for\n     * possible values\n     * @return {this}\n     */\n    mode(rotationMode) {\n        this._actionModel.actionType = 'rotateByMode';\n        this._actionModel.mode = rotationMode;\n        return this.addValueToQualifier(QUALIFIER_KEY, rotationMode);\n    }\n    /**\n     * @description Rotates an asset by the specified degrees.\n     * @param {number} degrees rotation in degrees e.g 90, 45, 33\n     * @return {this}\n     */\n    angle(degrees) {\n        this._actionModel.actionType = 'rotateByAngle';\n        this._actionModel.angle = degrees;\n        return this.addValueToQualifier(QUALIFIER_KEY, degrees);\n    }\n    static fromJson(actionModel) {\n        const { angle, mode } = actionModel;\n        // We are using this() to allow inheriting classes to use super.fromJson.apply(this, [actionModel])\n        // This allows the inheriting classes to determine the class to be created\n        const result = mode ? new this().mode(mode) : new this(angle);\n        return result;\n    }\n}\nexport default RotateAction;\n"],"mappings":"AAAA,SAASA,MAAT,QAAuB,0BAAvB;AACA,SAASC,SAAT,QAA0B,uCAA1B;AACA,MAAMC,aAAa,GAAG,GAAtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,MAAMC,YAAN,SAA2BH,MAA3B,CAAkC;EAC9BI,WAAW,CAACC,KAAD,EAAQ;IACf;IACA,KAAKC,YAAL,GAAoB,EAApB;IACA,KAAKC,YAAL,CAAkB,IAAIN,SAAJ,CAAcC,aAAd,EAA6BG,KAA7B,CAAlB;;IACA,IAAIA,KAAJ,EAAW;MACP,KAAKC,YAAL,CAAkBE,UAAlB,GAA+B,eAA/B;MACA,KAAKF,YAAL,CAAkBD,KAAlB,GAA0BA,KAA1B;IACH;EACJ;EACD;AACJ;AACA;AACA;AACA;AACA;AACA;;;EACII,IAAI,CAACC,YAAD,EAAe;IACf,KAAKJ,YAAL,CAAkBE,UAAlB,GAA+B,cAA/B;IACA,KAAKF,YAAL,CAAkBG,IAAlB,GAAyBC,YAAzB;IACA,OAAO,KAAKC,mBAAL,CAAyBT,aAAzB,EAAwCQ,YAAxC,CAAP;EACH;EACD;AACJ;AACA;AACA;AACA;;;EACIL,KAAK,CAACO,OAAD,EAAU;IACX,KAAKN,YAAL,CAAkBE,UAAlB,GAA+B,eAA/B;IACA,KAAKF,YAAL,CAAkBD,KAAlB,GAA0BO,OAA1B;IACA,OAAO,KAAKD,mBAAL,CAAyBT,aAAzB,EAAwCU,OAAxC,CAAP;EACH;;EACc,OAARC,QAAQ,CAACC,WAAD,EAAc;IACzB,MAAM;MAAET,KAAF;MAASI;IAAT,IAAkBK,WAAxB,CADyB,CAEzB;IACA;;IACA,MAAMC,MAAM,GAAGN,IAAI,GAAG,IAAI,IAAJ,GAAWA,IAAX,CAAgBA,IAAhB,CAAH,GAA2B,IAAI,IAAJ,CAASJ,KAAT,CAA9C;IACA,OAAOU,MAAP;EACH;;AAtC6B;;AAwClC,eAAeZ,YAAf"},"metadata":{},"sourceType":"module"}