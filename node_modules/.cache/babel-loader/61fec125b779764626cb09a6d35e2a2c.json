{"ast":null,"code":"import { Action } from \"../../internal/Action.js\";\nimport { QualifierValue } from \"../../internal/qualifier/QualifierValue.js\";\nimport { Qualifier } from \"../../internal/qualifier/Qualifier.js\";\n/**\n * @description Adjusts the fill light and blends the result with the original image.\n * @memberOf Actions.Adjust\n * @extends SDK.Action\n */\n\nclass FillLightAction extends Action {\n  constructor() {\n    super();\n  }\n  /**\n   * @description Sets the level of adjustment\n   * @param {number} lvl How much to blend the adjusted fill light, where 0 means only use the original and 100 means only use the adjusted fill light result. (Range: 0 to 100, Server default: 100)\n   */\n\n\n  blend(blend) {\n    this.lvl = blend;\n    return this;\n  }\n  /**\n   * @description Sets the level of the bias\n   * @param {number} biasLvl The bias to apply to the fill light effect (Range: -100 to 100, Server default: 0).\n   */\n\n\n  bias(biasLvl) {\n    this.biasLvl = biasLvl;\n    return this;\n  }\n\n  prepareQualifiers() {\n    const qualifierValue = new QualifierValue(['fill_light', this.lvl, this.biasLvl]).setDelimiter(':');\n    this.addQualifier(new Qualifier('e', qualifierValue));\n    return this;\n  }\n\n}\n\nexport { FillLightAction };","map":{"version":3,"names":["Action","QualifierValue","Qualifier","FillLightAction","constructor","blend","lvl","bias","biasLvl","prepareQualifiers","qualifierValue","setDelimiter","addQualifier"],"sources":["C:/Users/DELL/OneDrive/Desktop/New folder (2)/New folder/node_modules/@cloudinary/transformation-builder-sdk/actions/adjust/FillLightAction.js"],"sourcesContent":["import { Action } from \"../../internal/Action.js\";\nimport { QualifierValue } from \"../../internal/qualifier/QualifierValue.js\";\nimport { Qualifier } from \"../../internal/qualifier/Qualifier.js\";\n/**\n * @description Adjusts the fill light and blends the result with the original image.\n * @memberOf Actions.Adjust\n * @extends SDK.Action\n */\nclass FillLightAction extends Action {\n    constructor() {\n        super();\n    }\n    /**\n     * @description Sets the level of adjustment\n     * @param {number} lvl How much to blend the adjusted fill light, where 0 means only use the original and 100 means only use the adjusted fill light result. (Range: 0 to 100, Server default: 100)\n     */\n    blend(blend) {\n        this.lvl = blend;\n        return this;\n    }\n    /**\n     * @description Sets the level of the bias\n     * @param {number} biasLvl The bias to apply to the fill light effect (Range: -100 to 100, Server default: 0).\n     */\n    bias(biasLvl) {\n        this.biasLvl = biasLvl;\n        return this;\n    }\n    prepareQualifiers() {\n        const qualifierValue = new QualifierValue(['fill_light', this.lvl, this.biasLvl]).setDelimiter(':');\n        this.addQualifier(new Qualifier('e', qualifierValue));\n        return this;\n    }\n}\nexport { FillLightAction };\n"],"mappings":"AAAA,SAASA,MAAT,QAAuB,0BAAvB;AACA,SAASC,cAAT,QAA+B,4CAA/B;AACA,SAASC,SAAT,QAA0B,uCAA1B;AACA;AACA;AACA;AACA;AACA;;AACA,MAAMC,eAAN,SAA8BH,MAA9B,CAAqC;EACjCI,WAAW,GAAG;IACV;EACH;EACD;AACJ;AACA;AACA;;;EACIC,KAAK,CAACA,KAAD,EAAQ;IACT,KAAKC,GAAL,GAAWD,KAAX;IACA,OAAO,IAAP;EACH;EACD;AACJ;AACA;AACA;;;EACIE,IAAI,CAACC,OAAD,EAAU;IACV,KAAKA,OAAL,GAAeA,OAAf;IACA,OAAO,IAAP;EACH;;EACDC,iBAAiB,GAAG;IAChB,MAAMC,cAAc,GAAG,IAAIT,cAAJ,CAAmB,CAAC,YAAD,EAAe,KAAKK,GAApB,EAAyB,KAAKE,OAA9B,CAAnB,EAA2DG,YAA3D,CAAwE,GAAxE,CAAvB;IACA,KAAKC,YAAL,CAAkB,IAAIV,SAAJ,CAAc,GAAd,EAAmBQ,cAAnB,CAAlB;IACA,OAAO,IAAP;EACH;;AAxBgC;;AA0BrC,SAASP,eAAT"},"metadata":{},"sourceType":"module"}