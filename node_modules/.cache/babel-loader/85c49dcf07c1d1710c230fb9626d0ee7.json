{"ast":null,"code":"/**\n * @private\n * @description Reverses the version positions, x.y.z turns to z.y.x\n *              Example: 1.2.3 -> 03.02.01\n * @param {string} semVer Input can be either x.y.z or x.y\n * @return {string} in the form of zz.yy.xx (\n */\nexport function reverseVersion(semVer) {\n  if (semVer.split('.').length < 2) {\n    throw new Error('invalid semVer, must have at least two segments');\n  } // Split by '.', reverse, create new array\n\n\n  return semVer.split('.').reverse().join('.');\n}","map":{"version":3,"names":["reverseVersion","semVer","split","length","Error","reverse","join"],"sources":["C:/Users/DELL/OneDrive/Desktop/New folder (2)/New folder/node_modules/@cloudinary/url-gen/sdkAnalytics/reverseVersion.js"],"sourcesContent":["/**\n * @private\n * @description Reverses the version positions, x.y.z turns to z.y.x\n *              Example: 1.2.3 -> 03.02.01\n * @param {string} semVer Input can be either x.y.z or x.y\n * @return {string} in the form of zz.yy.xx (\n */\nexport function reverseVersion(semVer) {\n    if (semVer.split('.').length < 2) {\n        throw new Error('invalid semVer, must have at least two segments');\n    }\n    // Split by '.', reverse, create new array\n    return semVer.split('.').reverse().join('.');\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASA,cAAT,CAAwBC,MAAxB,EAAgC;EACnC,IAAIA,MAAM,CAACC,KAAP,CAAa,GAAb,EAAkBC,MAAlB,GAA2B,CAA/B,EAAkC;IAC9B,MAAM,IAAIC,KAAJ,CAAU,iDAAV,CAAN;EACH,CAHkC,CAInC;;;EACA,OAAOH,MAAM,CAACC,KAAP,CAAa,GAAb,EAAkBG,OAAlB,GAA4BC,IAA5B,CAAiC,GAAjC,CAAP;AACH"},"metadata":{},"sourceType":"module"}