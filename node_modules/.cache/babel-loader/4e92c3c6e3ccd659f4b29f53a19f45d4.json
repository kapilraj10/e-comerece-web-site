{"ast":null,"code":"import { Action } from \"../../internal/Action.js\";\nimport { Qualifier } from \"../../internal/qualifier/Qualifier.js\";\nimport { animatedWebP } from \"../../qualifiers/flag.js\";\nimport { animated } from \"../../qualifiers/flag.js\";\n/**\n * @extends SDK.Action\n * @memberOf Actions.Transcode\n * @description Converts a video to an animated webp or gif.\n * The resulting transformation includes format (f_format) and the animated flag (fl_animated).\n * The flag fl_awebp is added only when an animated webp is requested.\n * @see Visit {@link Actions.Transcode|Transcode} for an example\n */\n\nclass ToAnimatedAction extends Action {\n  constructor() {\n    let animatedFormat = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n    super();\n    this._actionModel = {\n      actionType: 'toAnimated'\n    };\n\n    if (animatedFormat.toString() === 'webp') {\n      this.addFlag(animatedWebP());\n    }\n\n    this.addFlag(animated());\n\n    if (animatedFormat) {\n      this.addQualifier(new Qualifier('f', animatedFormat));\n    }\n\n    this._actionModel.animatedFormat = animatedFormat;\n  }\n  /**\n   * @description Sets the time between frames.\n   * @param delayValue The time in milliseconds.\n   */\n\n\n  delay(delayValue) {\n    this.addQualifier(new Qualifier('dl', delayValue));\n    this._actionModel.delay = delayValue;\n    return this;\n  }\n  /**\n   * @description Sets the frequency at which the video is sampled.\n   * @param sampling As a string (e.g. '2.3s'), samples one frame every 2.3 seconds.<br>As a number (e.g. 20),\n   * samples that many equally spaced frames over the duration of the video.\n   */\n\n\n  sampling(sampling) {\n    this.addQualifier(new Qualifier('vs', sampling));\n    this._actionModel.sampling = sampling;\n    return this;\n  }\n\n  static fromJson(actionModel) {\n    const {\n      animatedFormat,\n      sampling,\n      delay\n    } = actionModel; // We are using this() to allow inheriting classes to use super.fromJson.apply(this, [actionModel])\n    // This allows the inheriting classes to determine the class to be created\n\n    const result = new this(animatedFormat);\n    sampling && result.sampling(sampling);\n    delay && result.delay(delay);\n    return result;\n  }\n\n}\n\nexport default ToAnimatedAction;","map":{"version":3,"names":["Action","Qualifier","animatedWebP","animated","ToAnimatedAction","constructor","animatedFormat","_actionModel","actionType","toString","addFlag","addQualifier","delay","delayValue","sampling","fromJson","actionModel","result"],"sources":["C:/Users/DELL/OneDrive/Desktop/New folder (2)/New folder/node_modules/@cloudinary/transformation-builder-sdk/actions/transcode/ToAnimatedAction.js"],"sourcesContent":["import { Action } from \"../../internal/Action.js\";\nimport { Qualifier } from \"../../internal/qualifier/Qualifier.js\";\nimport { animatedWebP } from \"../../qualifiers/flag.js\";\nimport { animated } from \"../../qualifiers/flag.js\";\n/**\n * @extends SDK.Action\n * @memberOf Actions.Transcode\n * @description Converts a video to an animated webp or gif.\n * The resulting transformation includes format (f_format) and the animated flag (fl_animated).\n * The flag fl_awebp is added only when an animated webp is requested.\n * @see Visit {@link Actions.Transcode|Transcode} for an example\n */\nclass ToAnimatedAction extends Action {\n    constructor(animatedFormat = '') {\n        super();\n        this._actionModel = { actionType: 'toAnimated' };\n        if (animatedFormat.toString() === 'webp') {\n            this.addFlag(animatedWebP());\n        }\n        this.addFlag(animated());\n        if (animatedFormat) {\n            this.addQualifier(new Qualifier('f', animatedFormat));\n        }\n        this._actionModel.animatedFormat = animatedFormat;\n    }\n    /**\n     * @description Sets the time between frames.\n     * @param delayValue The time in milliseconds.\n     */\n    delay(delayValue) {\n        this.addQualifier(new Qualifier('dl', delayValue));\n        this._actionModel.delay = delayValue;\n        return this;\n    }\n    /**\n     * @description Sets the frequency at which the video is sampled.\n     * @param sampling As a string (e.g. '2.3s'), samples one frame every 2.3 seconds.<br>As a number (e.g. 20),\n     * samples that many equally spaced frames over the duration of the video.\n     */\n    sampling(sampling) {\n        this.addQualifier(new Qualifier('vs', sampling));\n        this._actionModel.sampling = sampling;\n        return this;\n    }\n    static fromJson(actionModel) {\n        const { animatedFormat, sampling, delay } = actionModel;\n        // We are using this() to allow inheriting classes to use super.fromJson.apply(this, [actionModel])\n        // This allows the inheriting classes to determine the class to be created\n        const result = new this(animatedFormat);\n        sampling && result.sampling(sampling);\n        delay && result.delay(delay);\n        return result;\n    }\n}\nexport default ToAnimatedAction;\n"],"mappings":"AAAA,SAASA,MAAT,QAAuB,0BAAvB;AACA,SAASC,SAAT,QAA0B,uCAA1B;AACA,SAASC,YAAT,QAA6B,0BAA7B;AACA,SAASC,QAAT,QAAyB,0BAAzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,MAAMC,gBAAN,SAA+BJ,MAA/B,CAAsC;EAClCK,WAAW,GAAsB;IAAA,IAArBC,cAAqB,uEAAJ,EAAI;IAC7B;IACA,KAAKC,YAAL,GAAoB;MAAEC,UAAU,EAAE;IAAd,CAApB;;IACA,IAAIF,cAAc,CAACG,QAAf,OAA8B,MAAlC,EAA0C;MACtC,KAAKC,OAAL,CAAaR,YAAY,EAAzB;IACH;;IACD,KAAKQ,OAAL,CAAaP,QAAQ,EAArB;;IACA,IAAIG,cAAJ,EAAoB;MAChB,KAAKK,YAAL,CAAkB,IAAIV,SAAJ,CAAc,GAAd,EAAmBK,cAAnB,CAAlB;IACH;;IACD,KAAKC,YAAL,CAAkBD,cAAlB,GAAmCA,cAAnC;EACH;EACD;AACJ;AACA;AACA;;;EACIM,KAAK,CAACC,UAAD,EAAa;IACd,KAAKF,YAAL,CAAkB,IAAIV,SAAJ,CAAc,IAAd,EAAoBY,UAApB,CAAlB;IACA,KAAKN,YAAL,CAAkBK,KAAlB,GAA0BC,UAA1B;IACA,OAAO,IAAP;EACH;EACD;AACJ;AACA;AACA;AACA;;;EACIC,QAAQ,CAACA,QAAD,EAAW;IACf,KAAKH,YAAL,CAAkB,IAAIV,SAAJ,CAAc,IAAd,EAAoBa,QAApB,CAAlB;IACA,KAAKP,YAAL,CAAkBO,QAAlB,GAA6BA,QAA7B;IACA,OAAO,IAAP;EACH;;EACc,OAARC,QAAQ,CAACC,WAAD,EAAc;IACzB,MAAM;MAAEV,cAAF;MAAkBQ,QAAlB;MAA4BF;IAA5B,IAAsCI,WAA5C,CADyB,CAEzB;IACA;;IACA,MAAMC,MAAM,GAAG,IAAI,IAAJ,CAASX,cAAT,CAAf;IACAQ,QAAQ,IAAIG,MAAM,CAACH,QAAP,CAAgBA,QAAhB,CAAZ;IACAF,KAAK,IAAIK,MAAM,CAACL,KAAP,CAAaA,KAAb,CAAT;IACA,OAAOK,MAAP;EACH;;AAxCiC;;AA0CtC,eAAeb,gBAAf"},"metadata":{},"sourceType":"module"}