{"ast":null,"code":"/**\n * Represents a transformation expression.\n * @param {string} expressionStr - An expression in string format.\n * @class Expression\n *\n */\nclass Expression {\n  constructor(expressionStr) {\n    /**\n     * @protected\n     * @inner Expression-expressions\n     */\n    this.expressions = [];\n\n    if (expressionStr != null) {\n      this.expressions.push(Expression.normalize(expressionStr));\n    }\n  }\n  /**\n   * Convenience constructor method\n   * @function Expression.new\n   */\n\n\n  static new(expressionStr) {\n    return new this(expressionStr);\n  }\n  /**\n   * Normalize a string expression\n   * @function Cloudinary#normalize\n   * @param {string} expression a expression, e.g. \"w gt 100\", \"width_gt_100\", \"width > 100\"\n   * @return {string} the normalized form of the value expression, e.g. \"w_gt_100\"\n   */\n\n\n  static normalize(expression) {\n    var operators, operatorsPattern, operatorsReplaceRE, predefinedVarsPattern, predefinedVarsReplaceRE;\n\n    if (expression == null) {\n      return expression;\n    }\n\n    expression = String(expression);\n    operators = \"\\\\|\\\\||>=|<=|&&|!=|>|=|<|/|-|\\\\+|\\\\*|\\\\^\"; // operators\n\n    operatorsPattern = \"((\" + operators + \")(?=[ _]))\";\n    operatorsReplaceRE = new RegExp(operatorsPattern, \"g\"); // @ts-ignore\n\n    expression = expression.replace(operatorsReplaceRE, match => OPERATORS[match]); // predefined variables\n\n    predefinedVarsPattern = \"(\" + Object.keys(PREDEFINED_VARS).join(\"|\") + \")\";\n    predefinedVarsReplaceRE = new RegExp(predefinedVarsPattern, \"g\"); // @ts-ignore\n\n    expression = expression.replace(predefinedVarsReplaceRE, (match, p1, offset) => expression[offset - 1] === '$' ? match : PREDEFINED_VARS[match]);\n    return expression.replace(/[ _]+/g, '_');\n  }\n  /**\n   * Serialize the expression\n   * @return {string} the expression as a string\n   */\n\n\n  serialize() {\n    return Expression.normalize(this.expressions.join(\"_\"));\n  }\n\n  toString() {\n    return this.serialize();\n  }\n  /**\n   * Get the parent transformation of this expression\n   * @return Transformation\n   */\n\n\n  getParent() {\n    return this.parent;\n  }\n  /**\n   * Set the parent transformation of this expression\n   * @param {Transformation} the parent transformation\n   * @return {Expression} this expression\n   */\n\n\n  setParent(parent) {\n    this.parent = parent;\n    return this;\n  }\n  /**\n   * Add a expression\n   * @function Expression#predicate\n   * @internal\n   */\n\n\n  predicate(name, operator, value) {\n    // @ts-ignore\n    if (OPERATORS[operator] != null) {\n      // @ts-ignore\n      operator = OPERATORS[operator];\n    }\n\n    this.expressions.push(`${name}_${operator}_${value}`);\n    return this;\n  }\n  /**\n   * @function Expression#and\n   */\n\n\n  and() {\n    this.expressions.push(\"and\");\n    return this;\n  }\n  /**\n   * @function Expression#or\n   */\n\n\n  or() {\n    this.expressions.push(\"or\");\n    return this;\n  }\n  /**\n   * Conclude expression\n   * @function Expression#then\n   * @return {Transformation} the transformation this expression is defined for\n   */\n\n\n  then() {\n    return this.getParent().if(this.toString());\n  }\n  /**\n   * @function Expression#height\n   * @param {string} operator the comparison operator (e.g. \"<\", \"lt\")\n   * @param {string|number} value the right hand side value\n   * @return {Expression} this expression\n   */\n\n\n  height(operator, value) {\n    return this.predicate(\"h\", operator, value);\n  }\n  /**\n   * @function Expression#width\n   * @param {string} operator the comparison operator (e.g. \"<\", \"lt\")\n   * @param {string|number} value the right hand side value\n   * @return {Expression} this expression\n   */\n\n\n  width(operator, value) {\n    return this.predicate(\"w\", operator, value);\n  }\n  /**\n   * @function Expression#aspectRatio\n   * @param {string} operator the comparison operator (e.g. \"<\", \"lt\")\n   * @param {string|number} value the right hand side value\n   * @return {Expression} this expression\n   */\n\n\n  aspectRatio(operator, value) {\n    return this.predicate(\"ar\", operator, value);\n  }\n  /**\n   * @function Expression#pages\n   * @param {string} operator the comparison operator (e.g. \"<\", \"lt\")\n   * @param {string|number} value the right hand side value\n   * @return {Expression} this expression\n   */\n\n\n  pageCount(operator, value) {\n    return this.predicate(\"pc\", operator, value);\n  }\n  /**\n   * @function Expression#faces\n   * @param {string} operator the comparison operator (e.g. \"<\", \"lt\")\n   * @param {string|number} value the right hand side value\n   * @return {Expression} this expression\n   */\n\n\n  faceCount(operator, value) {\n    return this.predicate(\"fc\", operator, value);\n  }\n\n  value(value) {\n    this.expressions.push(value);\n    return this;\n  }\n  /**\n   */\n\n\n  static variable(name, value) {\n    return new this(name).value(value);\n  }\n  /**\n   * @returns Expression a new expression with the predefined variable \"width\"\n   * @function Expression.width\n   */\n\n\n  static width() {\n    return new this(\"width\");\n  }\n  /**\n   * @returns Expression a new expression with the predefined variable \"height\"\n   * @function Expression.height\n   */\n\n\n  static height() {\n    return new this(\"height\");\n  }\n  /**\n   * @returns Expression a new expression with the predefined variable \"initialWidth\"\n   * @function Expression.initialWidth\n   */\n\n\n  static initialWidth() {\n    return new this(\"initialWidth\");\n  }\n  /**\n   * @returns Expression a new expression with the predefined variable \"initialHeight\"\n   * @function Expression.initialHeight\n   */\n\n\n  static initialHeight() {\n    return new this(\"initialHeight\");\n  }\n  /**\n   * @returns Expression a new expression with the predefined variable \"aspectRatio\"\n   * @function Expression.aspectRatio\n   */\n\n\n  static aspectRatio() {\n    return new this(\"aspectRatio\");\n  }\n  /**\n   * @returns Expression a new expression with the predefined variable \"initialAspectRatio\"\n   * @function Expression.initialAspectRatio\n   */\n\n\n  static initialAspectRatio() {\n    return new this(\"initialAspectRatio\");\n  }\n  /**\n   * @returns Expression a new expression with the predefined variable \"pageCount\"\n   * @function Expression.pageCount\n   */\n\n\n  static pageCount() {\n    return new this(\"pageCount\");\n  }\n  /**\n   * @returns Expression new expression with the predefined variable \"faceCount\"\n   * @function Expression.faceCount\n   */\n\n\n  static faceCount() {\n    return new this(\"faceCount\");\n  }\n  /**\n   * @returns Expression a new expression with the predefined variable \"currentPage\"\n   * @function Expression.currentPage\n   */\n\n\n  static currentPage() {\n    return new this(\"currentPage\");\n  }\n  /**\n   * @returns Expression a new expression with the predefined variable \"tags\"\n   * @function Expression.tags\n   */\n\n\n  static tags() {\n    return new this(\"tags\");\n  }\n  /**\n   * @returns Expression a new expression with the predefined variable \"pageX\"\n   * @function Expression.pageX\n   */\n\n\n  static pageX() {\n    return new this(\"pageX\");\n  }\n  /**\n   * @returns Expression a new expression with the predefined variable \"pageY\"\n   * @function Expression.pageY\n   */\n\n\n  static pageY() {\n    return new this(\"pageY\");\n  }\n\n}\n/**\n * @internal\n */\n\n\nconst OPERATORS = {\n  \"=\": 'eq',\n  \"!=\": 'ne',\n  \"<\": 'lt',\n  \">\": 'gt',\n  \"<=\": 'lte',\n  \">=\": 'gte',\n  \"&&\": 'and',\n  \"||\": 'or',\n  \"*\": \"mul\",\n  \"/\": \"div\",\n  \"+\": \"add\",\n  \"-\": \"sub\",\n  \"^\": \"pow\"\n};\n/**\n * @internal\n */\n\nconst PREDEFINED_VARS = {\n  \"aspect_ratio\": \"ar\",\n  \"aspectRatio\": \"ar\",\n  \"current_page\": \"cp\",\n  \"currentPage\": \"cp\",\n  \"preview:duration\": \"preview:duration\",\n  \"duration\": \"du\",\n  \"face_count\": \"fc\",\n  \"faceCount\": \"fc\",\n  \"height\": \"h\",\n  \"initial_aspect_ratio\": \"iar\",\n  \"initial_duration\": \"idu\",\n  \"initial_height\": \"ih\",\n  \"initial_width\": \"iw\",\n  \"initialAspectRatio\": \"iar\",\n  \"initialDuration\": \"idu\",\n  \"initialHeight\": \"ih\",\n  \"initialWidth\": \"iw\",\n  \"page_count\": \"pc\",\n  \"page_x\": \"px\",\n  \"page_y\": \"py\",\n  \"pageCount\": \"pc\",\n  \"pageX\": \"px\",\n  \"pageY\": \"py\",\n  \"tags\": \"tags\",\n  \"width\": \"w\"\n};\n/**\n * @internal\n */\n\nconst BOUNDRY = \"[ _]+\";\nexport default Expression;","map":{"version":3,"names":["Expression","constructor","expressionStr","expressions","push","normalize","new","expression","operators","operatorsPattern","operatorsReplaceRE","predefinedVarsPattern","predefinedVarsReplaceRE","String","RegExp","replace","match","OPERATORS","Object","keys","PREDEFINED_VARS","join","p1","offset","serialize","toString","getParent","parent","setParent","predicate","name","operator","value","and","or","then","if","height","width","aspectRatio","pageCount","faceCount","variable","initialWidth","initialHeight","initialAspectRatio","currentPage","tags","pageX","pageY","BOUNDRY"],"sources":["C:/Users/DELL/OneDrive/Desktop/New folder (2)/New folder/node_modules/@cloudinary/url-gen/backwards/expression.js"],"sourcesContent":["/**\n * Represents a transformation expression.\n * @param {string} expressionStr - An expression in string format.\n * @class Expression\n *\n */\nclass Expression {\n    constructor(expressionStr) {\n        /**\n         * @protected\n         * @inner Expression-expressions\n         */\n        this.expressions = [];\n        if (expressionStr != null) {\n            this.expressions.push(Expression.normalize(expressionStr));\n        }\n    }\n    /**\n     * Convenience constructor method\n     * @function Expression.new\n     */\n    static new(expressionStr) {\n        return new this(expressionStr);\n    }\n    /**\n     * Normalize a string expression\n     * @function Cloudinary#normalize\n     * @param {string} expression a expression, e.g. \"w gt 100\", \"width_gt_100\", \"width > 100\"\n     * @return {string} the normalized form of the value expression, e.g. \"w_gt_100\"\n     */\n    static normalize(expression) {\n        var operators, operatorsPattern, operatorsReplaceRE, predefinedVarsPattern, predefinedVarsReplaceRE;\n        if (expression == null) {\n            return expression;\n        }\n        expression = String(expression);\n        operators = \"\\\\|\\\\||>=|<=|&&|!=|>|=|<|/|-|\\\\+|\\\\*|\\\\^\";\n        // operators\n        operatorsPattern = \"((\" + operators + \")(?=[ _]))\";\n        operatorsReplaceRE = new RegExp(operatorsPattern, \"g\");\n        // @ts-ignore\n        expression = expression.replace(operatorsReplaceRE, match => OPERATORS[match]);\n        // predefined variables\n        predefinedVarsPattern = \"(\" + Object.keys(PREDEFINED_VARS).join(\"|\") + \")\";\n        predefinedVarsReplaceRE = new RegExp(predefinedVarsPattern, \"g\");\n        // @ts-ignore\n        expression = expression.replace(predefinedVarsReplaceRE, (match, p1, offset) => (expression[offset - 1] === '$' ? match : PREDEFINED_VARS[match]));\n        return expression.replace(/[ _]+/g, '_');\n    }\n    /**\n     * Serialize the expression\n     * @return {string} the expression as a string\n     */\n    serialize() {\n        return Expression.normalize(this.expressions.join(\"_\"));\n    }\n    toString() {\n        return this.serialize();\n    }\n    /**\n     * Get the parent transformation of this expression\n     * @return Transformation\n     */\n    getParent() {\n        return this.parent;\n    }\n    /**\n     * Set the parent transformation of this expression\n     * @param {Transformation} the parent transformation\n     * @return {Expression} this expression\n     */\n    setParent(parent) {\n        this.parent = parent;\n        return this;\n    }\n    /**\n     * Add a expression\n     * @function Expression#predicate\n     * @internal\n     */\n    predicate(name, operator, value) {\n        // @ts-ignore\n        if (OPERATORS[operator] != null) {\n            // @ts-ignore\n            operator = OPERATORS[operator];\n        }\n        this.expressions.push(`${name}_${operator}_${value}`);\n        return this;\n    }\n    /**\n     * @function Expression#and\n     */\n    and() {\n        this.expressions.push(\"and\");\n        return this;\n    }\n    /**\n     * @function Expression#or\n     */\n    or() {\n        this.expressions.push(\"or\");\n        return this;\n    }\n    /**\n     * Conclude expression\n     * @function Expression#then\n     * @return {Transformation} the transformation this expression is defined for\n     */\n    then() {\n        return this.getParent().if(this.toString());\n    }\n    /**\n     * @function Expression#height\n     * @param {string} operator the comparison operator (e.g. \"<\", \"lt\")\n     * @param {string|number} value the right hand side value\n     * @return {Expression} this expression\n     */\n    height(operator, value) {\n        return this.predicate(\"h\", operator, value);\n    }\n    /**\n     * @function Expression#width\n     * @param {string} operator the comparison operator (e.g. \"<\", \"lt\")\n     * @param {string|number} value the right hand side value\n     * @return {Expression} this expression\n     */\n    width(operator, value) {\n        return this.predicate(\"w\", operator, value);\n    }\n    /**\n     * @function Expression#aspectRatio\n     * @param {string} operator the comparison operator (e.g. \"<\", \"lt\")\n     * @param {string|number} value the right hand side value\n     * @return {Expression} this expression\n     */\n    aspectRatio(operator, value) {\n        return this.predicate(\"ar\", operator, value);\n    }\n    /**\n     * @function Expression#pages\n     * @param {string} operator the comparison operator (e.g. \"<\", \"lt\")\n     * @param {string|number} value the right hand side value\n     * @return {Expression} this expression\n     */\n    pageCount(operator, value) {\n        return this.predicate(\"pc\", operator, value);\n    }\n    /**\n     * @function Expression#faces\n     * @param {string} operator the comparison operator (e.g. \"<\", \"lt\")\n     * @param {string|number} value the right hand side value\n     * @return {Expression} this expression\n     */\n    faceCount(operator, value) {\n        return this.predicate(\"fc\", operator, value);\n    }\n    value(value) {\n        this.expressions.push(value);\n        return this;\n    }\n    /**\n     */\n    static variable(name, value) {\n        return new this(name).value(value);\n    }\n    /**\n     * @returns Expression a new expression with the predefined variable \"width\"\n     * @function Expression.width\n     */\n    static width() {\n        return new this(\"width\");\n    }\n    /**\n     * @returns Expression a new expression with the predefined variable \"height\"\n     * @function Expression.height\n     */\n    static height() {\n        return new this(\"height\");\n    }\n    /**\n     * @returns Expression a new expression with the predefined variable \"initialWidth\"\n     * @function Expression.initialWidth\n     */\n    static initialWidth() {\n        return new this(\"initialWidth\");\n    }\n    /**\n     * @returns Expression a new expression with the predefined variable \"initialHeight\"\n     * @function Expression.initialHeight\n     */\n    static initialHeight() {\n        return new this(\"initialHeight\");\n    }\n    /**\n     * @returns Expression a new expression with the predefined variable \"aspectRatio\"\n     * @function Expression.aspectRatio\n     */\n    static aspectRatio() {\n        return new this(\"aspectRatio\");\n    }\n    /**\n     * @returns Expression a new expression with the predefined variable \"initialAspectRatio\"\n     * @function Expression.initialAspectRatio\n     */\n    static initialAspectRatio() {\n        return new this(\"initialAspectRatio\");\n    }\n    /**\n     * @returns Expression a new expression with the predefined variable \"pageCount\"\n     * @function Expression.pageCount\n     */\n    static pageCount() {\n        return new this(\"pageCount\");\n    }\n    /**\n     * @returns Expression new expression with the predefined variable \"faceCount\"\n     * @function Expression.faceCount\n     */\n    static faceCount() {\n        return new this(\"faceCount\");\n    }\n    /**\n     * @returns Expression a new expression with the predefined variable \"currentPage\"\n     * @function Expression.currentPage\n     */\n    static currentPage() {\n        return new this(\"currentPage\");\n    }\n    /**\n     * @returns Expression a new expression with the predefined variable \"tags\"\n     * @function Expression.tags\n     */\n    static tags() {\n        return new this(\"tags\");\n    }\n    /**\n     * @returns Expression a new expression with the predefined variable \"pageX\"\n     * @function Expression.pageX\n     */\n    static pageX() {\n        return new this(\"pageX\");\n    }\n    /**\n     * @returns Expression a new expression with the predefined variable \"pageY\"\n     * @function Expression.pageY\n     */\n    static pageY() {\n        return new this(\"pageY\");\n    }\n}\n/**\n * @internal\n */\nconst OPERATORS = {\n    \"=\": 'eq',\n    \"!=\": 'ne',\n    \"<\": 'lt',\n    \">\": 'gt',\n    \"<=\": 'lte',\n    \">=\": 'gte',\n    \"&&\": 'and',\n    \"||\": 'or',\n    \"*\": \"mul\",\n    \"/\": \"div\",\n    \"+\": \"add\",\n    \"-\": \"sub\",\n    \"^\": \"pow\",\n};\n/**\n * @internal\n */\nconst PREDEFINED_VARS = {\n    \"aspect_ratio\": \"ar\",\n    \"aspectRatio\": \"ar\",\n    \"current_page\": \"cp\",\n    \"currentPage\": \"cp\",\n    \"preview:duration\": \"preview:duration\",\n    \"duration\": \"du\",\n    \"face_count\": \"fc\",\n    \"faceCount\": \"fc\",\n    \"height\": \"h\",\n    \"initial_aspect_ratio\": \"iar\",\n    \"initial_duration\": \"idu\",\n    \"initial_height\": \"ih\",\n    \"initial_width\": \"iw\",\n    \"initialAspectRatio\": \"iar\",\n    \"initialDuration\": \"idu\",\n    \"initialHeight\": \"ih\",\n    \"initialWidth\": \"iw\",\n    \"page_count\": \"pc\",\n    \"page_x\": \"px\",\n    \"page_y\": \"py\",\n    \"pageCount\": \"pc\",\n    \"pageX\": \"px\",\n    \"pageY\": \"py\",\n    \"tags\": \"tags\",\n    \"width\": \"w\"\n};\n/**\n * @internal\n */\nconst BOUNDRY = \"[ _]+\";\nexport default Expression;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}