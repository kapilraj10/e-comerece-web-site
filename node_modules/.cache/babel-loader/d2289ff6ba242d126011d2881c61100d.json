{"ast":null,"code":"import { Action } from \"../../internal/Action.js\";\nimport { QualifierValue } from \"../../internal/qualifier/QualifierValue.js\";\nimport { Qualifier } from \"../../internal/qualifier/Qualifier.js\";\nimport { RectangleRegion } from \"../../qualifiers/region/RectangleRegion.js\";\n/**\n * @description A class that defines how to remove objects from an asset using Generative AI\n * @extends SDK.Action\n * @memberOf Actions.Effect\n * @see Visit {@link Actions.Effect|Effect} for an example\n */\n\nclass GenerativeRemove extends Action {\n  constructor() {\n    super();\n    this._prompts = [];\n    this._regions = [];\n    this._detectMultiple = false;\n    this._removeShadow = false;\n    this._actionModel.actionType = \"generativeRemove\";\n  }\n\n  prompt() {\n    for (var _len = arguments.length, value = new Array(_len), _key = 0; _key < _len; _key++) {\n      value[_key] = arguments[_key];\n    }\n\n    this._prompts = value;\n\n    if (this._prompts.length > 0) {\n      this._actionModel.prompts = this._prompts;\n    }\n\n    return this;\n  }\n\n  region() {\n    for (var _len2 = arguments.length, value = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      value[_key2] = arguments[_key2];\n    }\n\n    this._regions = value;\n\n    if (this._regions.length > 0) {\n      this._actionModel.regions = this._regions.map(region => region.toJson());\n    }\n\n    return this;\n  }\n\n  detectMultiple() {\n    let value = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n    this._detectMultiple = value;\n\n    if (this._detectMultiple) {\n      this._actionModel.detectMultiple = this._detectMultiple;\n    }\n\n    return this;\n  }\n\n  removeShadow() {\n    let value = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n    this._removeShadow = value;\n\n    if (this._removeShadow) {\n      this._actionModel.removeShadow = this._removeShadow;\n    }\n\n    return this;\n  }\n\n  prepareQualifiers() {\n    const qualifierValue = new QualifierValue().setDelimiter(\";\");\n\n    switch (true) {\n      case this._prompts.length > 0:\n        {\n          qualifierValue.addValue(this.preparePromptValue());\n          break;\n        }\n\n      case this._regions.length > 0:\n        {\n          qualifierValue.addValue(this.prepareRegionValue());\n          break;\n        }\n    }\n\n    if (this._detectMultiple) {\n      qualifierValue.addValue(\"multiple_true\");\n    }\n\n    if (this._removeShadow) {\n      qualifierValue.addValue(\"remove-shadow_true\");\n    }\n\n    this.addQualifier(new Qualifier(\"e\", `gen_remove:${qualifierValue.toString()}`));\n  }\n\n  preparePromptValue() {\n    const prompts = this._prompts;\n    const qualifierValue = new QualifierValue().setDelimiter(\";\");\n\n    if (prompts.length === 1) {\n      qualifierValue.addValue(`prompt_${prompts[0]}`);\n    } else {\n      qualifierValue.addValue(`prompt_(${prompts.join(\";\")})`);\n    }\n\n    return qualifierValue;\n  }\n\n  prepareRegionValue() {\n    const regions = this._regions;\n    const qualifierValue = new QualifierValue();\n\n    if (regions.length === 1) {\n      const singleRegion = regions[0].toString();\n      qualifierValue.addValue(`region_${singleRegion}`);\n    } else {\n      const regionList = regions.map(region => region.toString());\n      qualifierValue.addValue(`region_(${regionList.join(\";\")})`);\n    }\n\n    return qualifierValue;\n  }\n\n  static fromJson(actionModel) {\n    const {\n      prompts,\n      regions,\n      detectMultiple,\n      removeShadow\n    } = actionModel;\n    const result = new this();\n\n    if (regions) {\n      result.region(...regions.map(_ref => {\n        let {\n          x,\n          y,\n          width,\n          height\n        } = _ref;\n        return new RectangleRegion(x, y, width, height);\n      }));\n    }\n\n    if (prompts) {\n      result.prompt(...prompts);\n    }\n\n    if (detectMultiple) {\n      result.detectMultiple(detectMultiple);\n    }\n\n    if (removeShadow) {\n      result.removeShadow(removeShadow);\n    }\n\n    return result;\n  }\n\n}\n\nexport { GenerativeRemove };","map":{"version":3,"names":["Action","QualifierValue","Qualifier","RectangleRegion","GenerativeRemove","constructor","_prompts","_regions","_detectMultiple","_removeShadow","_actionModel","actionType","prompt","value","length","prompts","region","regions","map","toJson","detectMultiple","removeShadow","prepareQualifiers","qualifierValue","setDelimiter","addValue","preparePromptValue","prepareRegionValue","addQualifier","toString","join","singleRegion","regionList","fromJson","actionModel","result","x","y","width","height"],"sources":["C:/Users/DELL/OneDrive/Desktop/New folder (2)/New folder/node_modules/@cloudinary/transformation-builder-sdk/actions/effect/GenerativeRemove.js"],"sourcesContent":["import { Action } from \"../../internal/Action.js\";\nimport { QualifierValue } from \"../../internal/qualifier/QualifierValue.js\";\nimport { Qualifier } from \"../../internal/qualifier/Qualifier.js\";\nimport { RectangleRegion } from \"../../qualifiers/region/RectangleRegion.js\";\n/**\n * @description A class that defines how to remove objects from an asset using Generative AI\n * @extends SDK.Action\n * @memberOf Actions.Effect\n * @see Visit {@link Actions.Effect|Effect} for an example\n */\nclass GenerativeRemove extends Action {\n    constructor() {\n        super();\n        this._prompts = [];\n        this._regions = [];\n        this._detectMultiple = false;\n        this._removeShadow = false;\n        this._actionModel.actionType = \"generativeRemove\";\n    }\n    prompt(...value) {\n        this._prompts = value;\n        if (this._prompts.length > 0) {\n            this._actionModel.prompts = this._prompts;\n        }\n        return this;\n    }\n    region(...value) {\n        this._regions = value;\n        if (this._regions.length > 0) {\n            this._actionModel.regions = this._regions.map((region) => region.toJson());\n        }\n        return this;\n    }\n    detectMultiple(value = true) {\n        this._detectMultiple = value;\n        if (this._detectMultiple) {\n            this._actionModel.detectMultiple = this._detectMultiple;\n        }\n        return this;\n    }\n    removeShadow(value = true) {\n        this._removeShadow = value;\n        if (this._removeShadow) {\n            this._actionModel.removeShadow = this._removeShadow;\n        }\n        return this;\n    }\n    prepareQualifiers() {\n        const qualifierValue = new QualifierValue().setDelimiter(\";\");\n        switch (true) {\n            case this._prompts.length > 0: {\n                qualifierValue.addValue(this.preparePromptValue());\n                break;\n            }\n            case this._regions.length > 0: {\n                qualifierValue.addValue(this.prepareRegionValue());\n                break;\n            }\n        }\n        if (this._detectMultiple) {\n            qualifierValue.addValue(\"multiple_true\");\n        }\n        if (this._removeShadow) {\n            qualifierValue.addValue(\"remove-shadow_true\");\n        }\n        this.addQualifier(new Qualifier(\"e\", `gen_remove:${qualifierValue.toString()}`));\n    }\n    preparePromptValue() {\n        const prompts = this._prompts;\n        const qualifierValue = new QualifierValue().setDelimiter(\";\");\n        if (prompts.length === 1) {\n            qualifierValue.addValue(`prompt_${prompts[0]}`);\n        }\n        else {\n            qualifierValue.addValue(`prompt_(${prompts.join(\";\")})`);\n        }\n        return qualifierValue;\n    }\n    prepareRegionValue() {\n        const regions = this._regions;\n        const qualifierValue = new QualifierValue();\n        if (regions.length === 1) {\n            const singleRegion = regions[0].toString();\n            qualifierValue.addValue(`region_${singleRegion}`);\n        }\n        else {\n            const regionList = regions.map((region) => region.toString());\n            qualifierValue.addValue(`region_(${regionList.join(\";\")})`);\n        }\n        return qualifierValue;\n    }\n    static fromJson(actionModel) {\n        const { prompts, regions, detectMultiple, removeShadow } = actionModel;\n        const result = new this();\n        if (regions) {\n            result.region(...regions.map(({ x, y, width, height }) => new RectangleRegion(x, y, width, height)));\n        }\n        if (prompts) {\n            result.prompt(...prompts);\n        }\n        if (detectMultiple) {\n            result.detectMultiple(detectMultiple);\n        }\n        if (removeShadow) {\n            result.removeShadow(removeShadow);\n        }\n        return result;\n    }\n}\nexport { GenerativeRemove };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}