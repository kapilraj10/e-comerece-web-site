{"ast":null,"code":"import { LeveledEffectAction } from \"../EffectActions/LeveledEffectAction.js\";\n/**\n * @description Delivers a video or animated GIF that contains additional loops of the video/GIF.\n * @extends LeveledEffectAction\n * @memberOf Actions.Effect\n * @see Visit {@link Actions.Effect|Effect} for an example\n */\n\nclass LoopEffectAction extends LeveledEffectAction {\n  additionalIterations(value) {\n    this._actionModel.iterations = value;\n    const qualifierEffect = this.createEffectQualifier(this.effectType, value);\n    this.addQualifier(qualifierEffect);\n    return this;\n  }\n\n  static fromJson(actionModel) {\n    const {\n      actionType,\n      iterations\n    } = actionModel; // We are using this() to allow inheriting classes to use super.fromJson.apply(this, [actionModel])\n    // This allows the inheriting classes to determine the class to be created\n\n    const result = new this(actionType, iterations);\n    return result;\n  }\n\n}\n\nexport { LoopEffectAction };","map":{"version":3,"names":["LeveledEffectAction","LoopEffectAction","additionalIterations","value","_actionModel","iterations","qualifierEffect","createEffectQualifier","effectType","addQualifier","fromJson","actionModel","actionType","result"],"sources":["C:/Users/DELL/OneDrive/Desktop/New folder (2)/New folder/node_modules/@cloudinary/transformation-builder-sdk/actions/effect/leveled/Loop.js"],"sourcesContent":["import { LeveledEffectAction } from \"../EffectActions/LeveledEffectAction.js\";\n/**\n * @description Delivers a video or animated GIF that contains additional loops of the video/GIF.\n * @extends LeveledEffectAction\n * @memberOf Actions.Effect\n * @see Visit {@link Actions.Effect|Effect} for an example\n */\nclass LoopEffectAction extends LeveledEffectAction {\n    additionalIterations(value) {\n        this._actionModel.iterations = value;\n        const qualifierEffect = this.createEffectQualifier(this.effectType, value);\n        this.addQualifier(qualifierEffect);\n        return this;\n    }\n    static fromJson(actionModel) {\n        const { actionType, iterations } = (actionModel);\n        // We are using this() to allow inheriting classes to use super.fromJson.apply(this, [actionModel])\n        // This allows the inheriting classes to determine the class to be created\n        const result = new this(actionType, iterations);\n        return result;\n    }\n}\nexport { LoopEffectAction };\n"],"mappings":"AAAA,SAASA,mBAAT,QAAoC,yCAApC;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,MAAMC,gBAAN,SAA+BD,mBAA/B,CAAmD;EAC/CE,oBAAoB,CAACC,KAAD,EAAQ;IACxB,KAAKC,YAAL,CAAkBC,UAAlB,GAA+BF,KAA/B;IACA,MAAMG,eAAe,GAAG,KAAKC,qBAAL,CAA2B,KAAKC,UAAhC,EAA4CL,KAA5C,CAAxB;IACA,KAAKM,YAAL,CAAkBH,eAAlB;IACA,OAAO,IAAP;EACH;;EACc,OAARI,QAAQ,CAACC,WAAD,EAAc;IACzB,MAAM;MAAEC,UAAF;MAAcP;IAAd,IAA8BM,WAApC,CADyB,CAEzB;IACA;;IACA,MAAME,MAAM,GAAG,IAAI,IAAJ,CAASD,UAAT,EAAqBP,UAArB,CAAf;IACA,OAAOQ,MAAP;EACH;;AAb8C;;AAenD,SAASZ,gBAAT"},"metadata":{},"sourceType":"module"}