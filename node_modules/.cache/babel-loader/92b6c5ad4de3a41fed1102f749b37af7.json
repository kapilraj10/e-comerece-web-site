{"ast":null,"code":"import { isUrl } from \"./urlUtils/isUrl.js\";\nimport { isFileName } from \"./urlUtils/isFileName.js\";\nimport { publicIDContainsVersion } from \"./urlUtils/publicIDContainsVersion.js\";\n/**\n * Create the URL prefix for Cloudinary resources.\n * Available use cases\n * http://res.cloudinary.com/{cloudName}\n * https://res.cloudinary.com/{cloudName}\n * https://{cloudName}-res.cloudinary.com/\n * http://{domain}/${cloudName}\n * https://{domain}/${cloudName}\n * https://{domain}\n * @private\n *\n * @param {string} cloudName\n * @param {IURLConfig} urlConfig\n */\n\nfunction getUrlPrefix(cloudName, urlConfig) {\n  const secure = urlConfig.secure;\n  const privateCDN = urlConfig.privateCdn;\n  const cname = urlConfig.cname;\n  const secureDistribution = urlConfig.secureDistribution;\n\n  if (!secure && !cname) {\n    return `http://res.cloudinary.com/${cloudName}`;\n  }\n\n  if (secure && !secureDistribution && privateCDN) {\n    return `https://${cloudName}-res.cloudinary.com`;\n  }\n\n  if (secure && !secureDistribution) {\n    return `https://res.cloudinary.com/${cloudName}`;\n  }\n\n  if (secure && secureDistribution && privateCDN) {\n    return `https://${secureDistribution}`;\n  }\n\n  if (secure && secureDistribution) {\n    return `https://${secureDistribution}/${cloudName}`;\n  }\n\n  if (!secure && cname) {\n    return `http://${cname}/${cloudName}`;\n  } else {\n    return 'ERROR';\n  }\n}\n/**\n * @private\n * @param assetType\n */\n\n\nfunction handleAssetType(assetType) {\n  //default to image\n  if (!assetType) {\n    return 'image';\n  }\n\n  return assetType;\n}\n/**\n * @private\n * @param deliveryType\n */\n\n\nfunction handleDeliveryType(deliveryType) {\n  //default to upload\n  if (!deliveryType) {\n    return 'upload';\n  }\n\n  return deliveryType;\n}\n/**\n *\n * @param {string} publicID\n * @param {number} version\n * @param {boolean} forceVersion\n */\n\n\nfunction getUrlVersion(publicID, version, forceVersion) {\n  const shouldForceVersion = forceVersion !== false;\n\n  if (version) {\n    return `v${version}`;\n  } // In all these conditions we never force a version\n\n\n  if (publicIDContainsVersion(publicID) || isUrl(publicID) || isFileName(publicID)) {\n    return '';\n  }\n\n  return shouldForceVersion ? 'v1' : '';\n}\n\nexport { handleAssetType, getUrlVersion, handleDeliveryType, getUrlPrefix };","map":{"version":3,"names":["isUrl","isFileName","publicIDContainsVersion","getUrlPrefix","cloudName","urlConfig","secure","privateCDN","privateCdn","cname","secureDistribution","handleAssetType","assetType","handleDeliveryType","deliveryType","getUrlVersion","publicID","version","forceVersion","shouldForceVersion"],"sources":["C:/Users/DELL/OneDrive/Desktop/New folder (2)/New folder/node_modules/@cloudinary/url-gen/internal/url/cloudinaryURL.js"],"sourcesContent":["import { isUrl } from \"./urlUtils/isUrl.js\";\nimport { isFileName } from \"./urlUtils/isFileName.js\";\nimport { publicIDContainsVersion } from \"./urlUtils/publicIDContainsVersion.js\";\n/**\n * Create the URL prefix for Cloudinary resources.\n * Available use cases\n * http://res.cloudinary.com/{cloudName}\n * https://res.cloudinary.com/{cloudName}\n * https://{cloudName}-res.cloudinary.com/\n * http://{domain}/${cloudName}\n * https://{domain}/${cloudName}\n * https://{domain}\n * @private\n *\n * @param {string} cloudName\n * @param {IURLConfig} urlConfig\n */\nfunction getUrlPrefix(cloudName, urlConfig) {\n    const secure = urlConfig.secure;\n    const privateCDN = urlConfig.privateCdn;\n    const cname = urlConfig.cname;\n    const secureDistribution = urlConfig.secureDistribution;\n    if (!secure && !cname) {\n        return `http://res.cloudinary.com/${cloudName}`;\n    }\n    if (secure && !secureDistribution && privateCDN) {\n        return `https://${cloudName}-res.cloudinary.com`;\n    }\n    if (secure && !secureDistribution) {\n        return `https://res.cloudinary.com/${cloudName}`;\n    }\n    if (secure && secureDistribution && privateCDN) {\n        return `https://${secureDistribution}`;\n    }\n    if (secure && secureDistribution) {\n        return `https://${secureDistribution}/${cloudName}`;\n    }\n    if (!secure && cname) {\n        return `http://${cname}/${cloudName}`;\n    }\n    else {\n        return 'ERROR';\n    }\n}\n/**\n * @private\n * @param assetType\n */\nfunction handleAssetType(assetType) {\n    //default to image\n    if (!assetType) {\n        return 'image';\n    }\n    return assetType;\n}\n/**\n * @private\n * @param deliveryType\n */\nfunction handleDeliveryType(deliveryType) {\n    //default to upload\n    if (!deliveryType) {\n        return 'upload';\n    }\n    return deliveryType;\n}\n/**\n *\n * @param {string} publicID\n * @param {number} version\n * @param {boolean} forceVersion\n */\nfunction getUrlVersion(publicID, version, forceVersion) {\n    const shouldForceVersion = forceVersion !== false;\n    if (version) {\n        return `v${version}`;\n    }\n    // In all these conditions we never force a version\n    if (publicIDContainsVersion(publicID) || isUrl(publicID) || isFileName(publicID)) {\n        return '';\n    }\n    return shouldForceVersion ? 'v1' : '';\n}\nexport { handleAssetType, getUrlVersion, handleDeliveryType, getUrlPrefix };\n"],"mappings":"AAAA,SAASA,KAAT,QAAsB,qBAAtB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,SAASC,uBAAT,QAAwC,uCAAxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASC,YAAT,CAAsBC,SAAtB,EAAiCC,SAAjC,EAA4C;EACxC,MAAMC,MAAM,GAAGD,SAAS,CAACC,MAAzB;EACA,MAAMC,UAAU,GAAGF,SAAS,CAACG,UAA7B;EACA,MAAMC,KAAK,GAAGJ,SAAS,CAACI,KAAxB;EACA,MAAMC,kBAAkB,GAAGL,SAAS,CAACK,kBAArC;;EACA,IAAI,CAACJ,MAAD,IAAW,CAACG,KAAhB,EAAuB;IACnB,OAAQ,6BAA4BL,SAAU,EAA9C;EACH;;EACD,IAAIE,MAAM,IAAI,CAACI,kBAAX,IAAiCH,UAArC,EAAiD;IAC7C,OAAQ,WAAUH,SAAU,qBAA5B;EACH;;EACD,IAAIE,MAAM,IAAI,CAACI,kBAAf,EAAmC;IAC/B,OAAQ,8BAA6BN,SAAU,EAA/C;EACH;;EACD,IAAIE,MAAM,IAAII,kBAAV,IAAgCH,UAApC,EAAgD;IAC5C,OAAQ,WAAUG,kBAAmB,EAArC;EACH;;EACD,IAAIJ,MAAM,IAAII,kBAAd,EAAkC;IAC9B,OAAQ,WAAUA,kBAAmB,IAAGN,SAAU,EAAlD;EACH;;EACD,IAAI,CAACE,MAAD,IAAWG,KAAf,EAAsB;IAClB,OAAQ,UAASA,KAAM,IAAGL,SAAU,EAApC;EACH,CAFD,MAGK;IACD,OAAO,OAAP;EACH;AACJ;AACD;AACA;AACA;AACA;;;AACA,SAASO,eAAT,CAAyBC,SAAzB,EAAoC;EAChC;EACA,IAAI,CAACA,SAAL,EAAgB;IACZ,OAAO,OAAP;EACH;;EACD,OAAOA,SAAP;AACH;AACD;AACA;AACA;AACA;;;AACA,SAASC,kBAAT,CAA4BC,YAA5B,EAA0C;EACtC;EACA,IAAI,CAACA,YAAL,EAAmB;IACf,OAAO,QAAP;EACH;;EACD,OAAOA,YAAP;AACH;AACD;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASC,aAAT,CAAuBC,QAAvB,EAAiCC,OAAjC,EAA0CC,YAA1C,EAAwD;EACpD,MAAMC,kBAAkB,GAAGD,YAAY,KAAK,KAA5C;;EACA,IAAID,OAAJ,EAAa;IACT,OAAQ,IAAGA,OAAQ,EAAnB;EACH,CAJmD,CAKpD;;;EACA,IAAIf,uBAAuB,CAACc,QAAD,CAAvB,IAAqChB,KAAK,CAACgB,QAAD,CAA1C,IAAwDf,UAAU,CAACe,QAAD,CAAtE,EAAkF;IAC9E,OAAO,EAAP;EACH;;EACD,OAAOG,kBAAkB,GAAG,IAAH,GAAU,EAAnC;AACH;;AACD,SAASR,eAAT,EAA0BI,aAA1B,EAAyCF,kBAAzC,EAA6DV,YAA7D"},"metadata":{},"sourceType":"module"}